{
  "contractName": "FyghtersMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract LoomDai",
          "name": "_dai",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "challengerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winnerId",
          "type": "uint256"
        }
      ],
      "name": "ChallengeOccurred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "FyghterCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newName",
          "type": "string"
        }
      ],
      "name": "FyghterRenamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newSkin",
          "type": "string"
        }
      ],
      "name": "SkinChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_winProbability",
          "type": "uint256"
        }
      ],
      "name": "calculateGainAndLoss",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gainIfWin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lossIfLose",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "calculateWinProbability",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winProbability",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newSkin",
          "type": "string"
        }
      ],
      "name": "changeSkin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fyghters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "skin",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "xp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBetValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "rename",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skins",
      "outputs": [
        {
          "internalType": "string",
          "name": "skin",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "xpNeeded",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_myFyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_enemyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_winnerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_winProbability",
          "type": "uint256"
        }
      ],
      "name": "deterministicChallenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_xp",
          "type": "uint256"
        }
      ],
      "name": "updateXp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "updateBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract LoomDai\",\"name\":\"_dai\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"challengerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winnerId\",\"type\":\"uint256\"}],\"name\":\"ChallengeOccurred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"FyghterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"FyghterRenamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newSkin\",\"type\":\"string\"}],\"name\":\"SkinChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_winProbability\",\"type\":\"uint256\"}],\"name\":\"calculateGainAndLoss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gainIfWin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lossIfLose\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"calculateWinProbability\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winProbability\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newSkin\",\"type\":\"string\"}],\"name\":\"changeSkin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_myFyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_enemyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winnerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winProbability\",\"type\":\"uint256\"}],\"name\":\"deterministicChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fyghters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skin\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"xp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"rename\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"skins\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"skin\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"xpNeeded\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_xp\",\"type\":\"uint256\"}],\"name\":\"updateXp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol\":\"FyghtersMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/cmarcelo/git/fyght/packages/contracts/contracts/Fyghters.sol\":{\"keccak256\":\"0x6efcbb5cd308de2c4dc1d32c8c8c0cc5235918f06c8df63ddcf47e182f7a1524\",\"urls\":[\"bzz-raw://24c06d3904f1678906ce1d11deec9bbeeeba8fdb6e049e92537a3a03af0d5cc8\",\"dweb:/ipfs/QmQFMoE5jJYJpptSuX6quKZgGRThrQ9uMGhG3uhB8prjwd\"]},\"/home/cmarcelo/git/fyght/packages/contracts/contracts/LoomDai.sol\":{\"keccak256\":\"0x17c1760b05d7b6c038326210625aee58a7b83880555f9dc061116a89e82618b6\",\"urls\":[\"bzz-raw://42f9c83747e056070d2bb1b367d983fc699a5abb8160aab02140daedb00d2c3e\",\"dweb:/ipfs/QmVPb7iHtqm9bx5hnnygiTxQSB2kXr8d4AmwCmN7aFJ2wE\"]},\"/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol\":{\"keccak256\":\"0x52872425bf218f56e0410fa8ae8aa6fb7ce3885624e4d500d59a8686f40dcfbe\",\"urls\":[\"bzz-raw://3b17808c639b2c7d7c13586607cb195f9c9c1c7a98239c4b85d41d8c20a841cf\",\"dweb:/ipfs/QmRj4pHwehFqSHyoSNJu2R9mB2ogAtM6gvFL8FBAXndutG\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x883e78446376207b044ecb413b6add5d7f7e95e14f5e427e24db637104402b39\",\"urls\":[\"bzz-raw://650237a578466ed9c1a6da601ee5364f9ccec2cc0b418760d1d049f5649a43e1\",\"dweb:/ipfs/QmZnZpL9fb3Sk7FCWpvzVt3oaEpaNT9MDXDnMHYmEgVedf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6cd80ccf035f3e77640b0447c06eb66f4e57658cf1d1dada3a7b48346ae4f549\",\"urls\":[\"bzz-raw://738ad925fdb37701cfea66d4ed4fca4074bf145d0b6b6c45cfd96b2845bff4df\",\"dweb:/ipfs/QmYuZLGiKTG4EDu67qcpotzSd4Nc5jAkYFjG2GsRF85KSR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x34726f200d88943561936daf5297552636b58b57ecd3eca6494d678d93d03252\",\"urls\":[\"bzz-raw://dee47bb5e1ef4b3b8ffd3edd9d1d774249c546d4ae890c46605dd9eda73ff7eb\",\"dweb:/ipfs/QmRKJyJDbjbaf8LLnw1jcpZ47VbU2c9gYT2xZSp19m55aM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xaf17cd6e2d9f484546d48a0e9e7e279e4e90436c16df7fc3b562e58594f268d7\",\"urls\":[\"bzz-raw://7559f5728423b275e0cbb3e787d2c79115ad09e146abfedf10fb50e507fbf1a5\",\"dweb:/ipfs/QmX4jFGeYtL3QSfoS1HNQpytnjKvq7fHszAjvn42AVGHSn\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb94a03de3c8602a90c917ec7537b962dcf2cce2f2bd5f266e6ad790b45c10b97\",\"urls\":[\"bzz-raw://9291ee41737c8e8f37e6cae30dc2bf7145a99985b29e02120d57190369273562\",\"dweb:/ipfs/QmeFJtn4SVTGRKRsh2cCxa2gisLvNbQf5KvgHeUaF1Pzbv\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200545638038062005456833981810160405260208110156200003757600080fd5b8101908080519060200190929190505050806040518060400160405280600781526020017f46796768746572000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f4659474854455200000000000000000000000000000000000000000000000000815250620000cd6301ffc9a760e01b6200090d60201b60201c565b8160069080519060200190620000e592919062000a16565b508060079080519060200190620000fe92919062000a16565b50620001176380ac58cd60e01b6200090d60201b60201c565b6200012f635b5e139f60e01b6200090d60201b60201c565b6200014763780e9d6360e01b6200090d60201b60201c565b505080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c60405180604001604052806040518060400160405280600581526020017f6e616b65640000000000000000000000000000000000000000000000000000008152508152602001600160ff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906200022192919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600a81526020017f6e6f726d616c5f677579000000000000000000000000000000000000000000008152508152602001600a60ff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190620002dc92919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600a81526020017f6b61726174655f6b6964000000000000000000000000000000000000000000008152508152602001600f60ff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906200039792919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600881526020017f6a61706f6e6573650000000000000000000000000000000000000000000000008152508152602001601960ff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906200045292919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600481526020017f6d6f6e6b000000000000000000000000000000000000000000000000000000008152508152602001602860ff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906200050d92919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600581526020017f6e696e6a610000000000000000000000000000000000000000000000000000008152508152602001603260ff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190620005c892919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600681526020017f6e6f5f6f6e6500000000000000000000000000000000000000000000000000008152508152602001605060ff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906200068392919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600581526020017f64656d6f6e0000000000000000000000000000000000000000000000000000008152508152602001605060ff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906200073e92919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff1602179055505050600c60405180604001604052806040518060400160405280600681526020017f6d617374657200000000000000000000000000000000000000000000000000008152508152602001606460ff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190620007f992919062000a9d565b5060208201518160010160006101000a81548160ff021916908360ff160217905550505060008090505b600c805490508110156200090457600c81815481106200083f57fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff16600d600c83815481106200087157fe5b90600052602060002090600202016000016040518082805460018160011615610100020316600290048015620008e15780601f10620008be576101008083540402835291820191620008e1565b820191906000526020600020905b815481529060010190602001808311620008cc575b505091505090815260200160405180910390208190555080600101905062000823565b50505062000b4c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620009aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000a5957805160ff191683800117855562000a8a565b8280016001018555821562000a8a579182015b8281111562000a8957825182559160200191906001019062000a6c565b5b50905062000a99919062000b24565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000ae057805160ff191683800117855562000b11565b8280016001018555821562000b11579182015b8281111562000b1057825182559160200191906001019062000af3565b5b50905062000b20919062000b24565b5090565b62000b4991905b8082111562000b4557600081600090555060010162000b2b565b5090565b90565b6148fa8062000b5c6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636c0360eb1161010f578063b6a46b3b116100a2578063c87b56dd11610071578063c87b56dd14610d5a578063d35bf1d914610e01578063e2bbb15814610e4d578063e985e9c514610e85576101f0565b8063b6a46b3b14610b58578063b88d4fde14610bd1578063b94c940614610cd6578063c287e49314610d22576101f0565b806395d89b41116100de57806395d89b41146109b95780639abc61f514610a3c578063a22cb46514610a85578063a916353614610ad5576101f0565b80636c0360eb146108925780636e8c9a141461091557806370a0823114610933578063958e2d311461098b576101f0565b80632e4148901161018757806349b640c51161015657806349b640c5146106825780634f6ccce7146107aa57806358453fef146107ec5780636352211e14610824576101f0565b80632e414890146104f75780632f745c591461052f5780633ec2d8361461059157806342842e0e14610614576101f0565b8063095ea7b3116101c3578063095ea7b31461036957806318160ddd146103b757806323b872dd146103d55780632db2ede514610443576101f0565b806301ffc9a7146101f5578063035cf1421461025a57806306fdde0314610278578063081812fc146102fb575b600080fd5b6102406004803603602081101561020b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f01565b604051808215151515815260200191505060405180910390f35b610262610f68565b6040518082815260200191505060405180910390f35b610280610f7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c05780820151818401526020810190506102a5565b50505050905090810190601f1680156102ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061101d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b56004803603604081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110b8565b005b6103bf6111fc565b6040518082815260200191505060405180910390f35b610441600480360360608110156103eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061120d565b005b61046f6004803603602081101561045957600080fd5b8101908080359060200190929190505050611283565b60405180806020018360ff1660ff168152602001828103825284818151815260200191508051906020019080838360005b838110156104bb5780820151818401526020810190506104a0565b50505050905090810190601f1680156104e85780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61052d6004803603604081101561050d57600080fd5b810190808035906020019092919080359060200190929190505050611359565b005b61057b6004803603604081101561054557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611422565b6040518082815260200191505060405180910390f35b610612600480360360408110156105a757600080fd5b8101908080359060200190929190803590602001906401000000008111156105ce57600080fd5b8201836020820111156105e057600080fd5b8035906020019184600183028401116401000000008311171561060257600080fd5b909192939192939050505061147d565b005b6106806004803603606081101561062a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115a2565b005b6106ae6004803603602081101561069857600080fd5b81019080803590602001909291905050506115c2565b604051808681526020018060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b838110156107045780820151818401526020810190506106e9565b50505050905090810190601f1680156107315780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101561076a57808201518184015260208101905061074f565b50505050905090810190601f1680156107975780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6107d6600480360360208110156107c057600080fd5b8101908080359060200190929190505050611735565b6040518082815260200191505060405180910390f35b6108226004803603604081101561080257600080fd5b810190808035906020019092919080359060200190929190505050611758565b005b6108506004803603602081101561083a57600080fd5b810190808035906020019092919050505061177f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61089a6117b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108da5780820151818401526020810190506108bf565b50505050905090810190601f1680156109075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61091d611858565b6040518082815260200191505060405180910390f35b6109756004803603602081101561094957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061186b565b6040518082815260200191505060405180910390f35b6109b7600480360360208110156109a157600080fd5b8101908080359060200190929190505050611940565b005b6109c1611ba7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a015780820151818401526020810190506109e6565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6860048036036020811015610a5257600080fd5b8101908080359060200190929190505050611c49565b604051808381526020018281526020019250505060405180910390f35b610ad360048036036040811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611cdf565b005b610b5660048036036040811015610aeb57600080fd5b810190808035906020019092919080359060200190640100000000811115610b1257600080fd5b820183602082011115610b2457600080fd5b80359060200191846001830284011164010000000083111715610b4657600080fd5b9091929391929390505050611e97565b005b610bcf60048036036020811015610b6e57600080fd5b8101908080359060200190640100000000811115610b8b57600080fd5b820183602082011115610b9d57600080fd5b80359060200191846001830284011164010000000083111715610bbf57600080fd5b9091929391929390505050612125565b005b610cd460048036036080811015610be757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c4e57600080fd5b820183602082011115610c6057600080fd5b80359060200191846001830284011164010000000083111715610c8257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123ca565b005b610d0c60048036036040811015610cec57600080fd5b810190808035906020019092919080359060200190929190505050612442565b6040518082815260200191505060405180910390f35b610d5860048036036040811015610d3857600080fd5b8101908080359060200190929190803590602001909291905050506127bd565b005b610d8660048036036020811015610d7057600080fd5b81019080803590602001909291905050506127e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dc6578082015181840152602081019050610dab565b50505050905090810190601f168015610df35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e4b60048036036080811015610e1757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506129e6565b005b610e8360048036036040811015610e6357600080fd5b8101908080359060200190929190803590602001909291905050506129f8565b005b610ee760048036036040811015610e9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c75565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006005670de0b6b3a764000002905090565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110135780601f10610fe857610100808354040283529160200191611013565b820191906000526020600020905b815481529060010190602001808311610ff657829003601f168201915b5050505050905090565b600061102882612d09565b61107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614751602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006110c38261177f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061481d6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611169612d26565b73ffffffffffffffffffffffffffffffffffffffff161480611198575061119781611192612d26565b612c75565b5b6111ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806146836038913960400191505060405180910390fd5b6111f78383612d2e565b505050565b60006112086002612de7565b905090565b61121e611218612d26565b82612dfc565b611273576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806148676031913960400191505060405180910390fd5b61127e838383612ef0565b505050565b600c818154811061129057fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133c5780601f106113115761010080835404028352916020019161133c565b820191906000526020600020905b81548152906001019060200180831161131f57829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b816113638161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b60006113f28484612442565b90506000816113ff613133565b111561140b578361140d565b845b905061141b85858385613193565b5050505050565b600061147582600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133df90919063ffffffff16565b905092915050565b826114878161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b8282600b868154811061151957fe5b90600052602060002090600502016001019190611537929190614440565b50837f553656c6feb05b3e720bd33ad52f9cc39bc80982fb434f80e81391abc4c9dda5848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b6115bd838383604051806020016040528060008152506123ca565b505050565b600b81815481106115cf57fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116815780601f1061165657610100808354040283529160200191611681565b820191906000526020600020905b81548152906001019060200180831161166457829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561171f5780601f106116f45761010080835404028352916020019161171f565b820191906000526020600020905b81548152906001019060200180831161170257829003601f168201915b5050505050908060030154908060040154905085565b60008061174c8360026133f990919063ffffffff16565b50905080915050919050565b80600b838154811061176657fe5b9060005260206000209060050201600401819055505050565b60006117af826040518060600160405280602981526020016146e56029913960026134289092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561184e5780601f106118235761010080835404028352916020019161184e565b820191906000526020600020905b81548152906001019060200180831161183157829003601f168201915b5050505050905090565b60006005670de0b6b3a764000002905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806146bb602a913960400191505060405180910390fd5b611939600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613447565b9050919050565b8061194a8161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b6000600b83815481106119dc57fe5b90600052602060002090600502016004015490506000600b84815481106119ff57fe5b906000526020600020906005020160040181905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611abd57600080fd5b505af1158015611ad1573d6000803e3d6000fd5b505050506040513d6020811015611ae757600080fd5b8101908080519060200190929190505050611b6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5769746864726177207472616e736665722077697468206572726f722e00000081525060200191505060405180910390fd5b827f0c875c8d391179c5cf7ad8303d268efd50b8beb78b671f85cd54bfb91eb8ef40826040518082815260200191505060405180910390a2505050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c3f5780601f10611c1457610100808354040283529160200191611c3f565b820191906000526020600020905b815481529060010190602001808311611c2257829003601f168201915b5050505050905090565b600080611c9e670de0b6b3a7640000611c90611c7686670de0b6b3a764000061345c90919063ffffffff16565b6005670de0b6b3a7640000026134a690919063ffffffff16565b61352c90919063ffffffff16565b9150611cd8670de0b6b3a7640000611cca856005670de0b6b3a7640000026134a690919063ffffffff16565b61352c90919063ffffffff16565b9050915091565b611ce7612d26565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000611d95612d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611e42612d26565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b82611ea18161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b611f7183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050613576565b611fe3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420736b696e2e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600b8581548110611ff257fe5b906000526020600020906005020190506000600d85856040518083838082843780830192505050925050509081526020016040518091039020549050808260030154101561208b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806147f96024913960400191505060405180910390fd5b8484600b888154811061209a57fe5b906000526020600020906005020160020191906120b8929190614440565b50857f546aa5db2f34cd0c10c3bf80054ede7658175a11189cbeee6241bd45952c3a99868660405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a2505050505050565b60006121303361186b565b14612186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061477d6024913960400191505060405180910390fd5b6000600b805490509050600b6040518060a0016040528083815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600c6000815481106121fb57fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122a05780601f10612275576101008083540402835291602001916122a0565b820191906000526020600020905b81548152906001019060200180831161228357829003601f168201915b5050505050815260200160018152602001600081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010190805190602001906123059291906144c0565b5060408201518160020190805190602001906123229291906144c0565b506060820151816003015560808201518160040155505061234333826135eb565b3373ffffffffffffffffffffffffffffffffffffffff167f1243c32293ccfe8a2001f7de06e504e0ffb98f63144253faa43123a5cffe93dc82858560405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a2505050565b6123db6123d5612d26565b83612dfc565b612430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806148676031913960400191505060405180910390fd5b61243c848484846137df565b50505050565b600061244c614540565b600b848154811061245957fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125155780601f106124ea57610100808354040283529160200191612515565b820191906000526020600020905b8154815290600101906020018083116124f857829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125b75780601f1061258c576101008083540402835291602001916125b7565b820191906000526020600020905b81548152906001019060200180831161259a57829003601f168201915b505050505081526020016003820154815260200160048201548152505090506125de614540565b600b84815481106125eb57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126a75780601f1061267c576101008083540402835291602001916126a7565b820191906000526020600020905b81548152906001019060200180831161268a57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127495780601f1061271e57610100808354040283529160200191612749565b820191906000526020600020905b81548152906001019060200180831161272c57829003601f168201915b505050505081526020016003820154815260200160048201548152505090506127b36127868260600151846060015161385190919063ffffffff16565b6127a5670de0b6b3a764000085606001516134a690919063ffffffff16565b61352c90919063ffffffff16565b9250505092915050565b80600b83815481106127cb57fe5b9060005260206000209060050201600301819055505050565b60606127ef82612d09565b612844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806147ca602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128ed5780601f106128c2576101008083540402835291602001916128ed565b820191906000526020600020905b8154815290600101906020018083116128d057829003601f168201915b5050505050905060008151141561291657604051806020016040528060008152509150506129e1565b60098160405160200180838054600181600116156101000203166002900480156129775780601f10612955576101008083540402835291820191612977565b820191906000526020600020905b815481529060010190602001808311612963575b505082805190602001908083835b602083106129a85780518252602082019150602081019050602083039250612985565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6129f284848484613193565b50505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612ad557600080fd5b505af1158015612ae9573d6000803e3d6000fd5b505050506040513d6020811015612aff57600080fd5b8101908080519060200190929190505050612b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4465706f736974207472616e736665722077697468206572726f722e0000000081525060200191505060405180910390fd5b6005670de0b6b3a764000002811015612be6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806145b76024913960400191505060405180910390fd5b612c1781600b8481548110612bf757fe5b90600052602060002090600502016004015461385190919063ffffffff16565b600b8381548110612c2457fe5b906000526020600020906005020160040181905550817f06da3309189fa49284f335d2c2bcb4cb0b8ad2a59ad92a9bdebeeb8f1ceba511826040518082815260200191505060405180910390a25050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000612d1f8260026138d990919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16612da18361177f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000612df5826000016138f3565b9050919050565b6000612e0782612d09565b612e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614657602c913960400191505060405180910390fd5b6000612e678361177f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612ed657508373ffffffffffffffffffffffffffffffffffffffff16612ebe8461101d565b73ffffffffffffffffffffffffffffffffffffffff16145b80612ee75750612ee68185612c75565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612f108261177f565b73ffffffffffffffffffffffffffffffffffffffff1614612f7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806147a16029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613002576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806146336024913960400191505060405180910390fd5b61300d838383613904565b613018600082612d2e565b61306981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061390990919063ffffffff16565b506130bb81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061392390919063ffffffff16565b506130d28183600261393d9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061318e6064670de0b6b3a76400006064424460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060001c8161317e57fe5b060261352c90919063ffffffff16565b905090565b60008061319f83611c49565b9150915080600b87815481106131b157fe5b906000526020600020906005020160040154101561321a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061483e6029913960400191505060405180910390fd5b81600b868154811061322857fe5b9060005260206000209060050201600401541015613291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061460d6026913960400191505060405180910390fd5b60008487146132a057816132a2565b825b905060008786146132b357876132b5565b865b9050600b86815481106132c457fe5b90600052602060002090600502016003016000815480929190600101919050555061331682600b88815481106132f657fe5b90600052602060002090600502016004015461385190919063ffffffff16565b600b878154811061332357fe5b90600052602060002090600502016004018190555061336982600b838154811061334957fe5b90600052602060002090600502016004015461345c90919063ffffffff16565b600b828154811061337657fe5b90600052602060002090600502016004018190555061339486613972565b50877f9710e56297b5e8778d11e7e8579c9906ed103bf38376059777631205ff0c57788888604051808381526020018281526020019250505060405180910390a25050505050505050565b60006133ee8360000183613aaf565b60001c905092915050565b60008060008061340c8660000186613b32565b915091508160001c8160001c8090509350935050509250929050565b600061343b846000018460001b84613bcb565b60001c90509392505050565b600061345582600001613cc1565b9050919050565b600061349e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613cd2565b905092915050565b6000808314156134b95760009050613526565b60008284029050828482816134ca57fe5b0414613521576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806147306021913960400191505060405180910390fd5b809150505b92915050565b600061356e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613d92565b905092915050565b600080600d836040518082805190602001908083835b602083106135af578051825260208201915060208101905060208303925061358c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561368e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61369781612d09565b1561370a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61371660008383613904565b61376781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061392390919063ffffffff16565b5061377e8183600261393d9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6137ea848484612ef0565b6137f684848484613e58565b61384b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806145db6032913960400191505060405180910390fd5b50505050565b6000808284019050838110156138cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006138eb836000018360001b61417b565b905092915050565b600081600001805490509050919050565b505050565b600061391b836000018360001b61419e565b905092915050565b6000613935836000018360001b614286565b905092915050565b6000613969846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6142f6565b90509392505050565b606060006001600c805490500390505b60008110613aa957600c818154811061399757fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff16600b84815481106139c657fe5b90600052602060002090600502016003015410613a9b57600c81815481106139ea57fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a8f5780601f10613a6457610100808354040283529160200191613a8f565b820191906000526020600020905b815481529060010190602001808311613a7257829003601f168201915b50505050509150613aa9565b808060019003915050613982565b50919050565b600081836000018054905011613b10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806145956022913960400191505060405180910390fd5b826000018281548110613b1f57fe5b9060005260206000200154905092915050565b60008082846000018054905011613b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061470e6022913960400191505060405180910390fd5b6000846000018481548110613ba557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390613c92576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613c57578082015181840152602081019050613c3c565b50505050905090810190601f168015613c845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110613ca557fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000838311158290613d7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613d44578082015181840152602081019050613d29565b50505050905090810190601f168015613d715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290613e3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613e03578082015181840152602081019050613de8565b50505050905090810190601f168015613e305780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581613e4a57fe5b049050809150509392505050565b6000613e798473ffffffffffffffffffffffffffffffffffffffff166143d2565b613e865760019050614173565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b613eb1612d26565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613f61578082015181840152602081019050613f46565b50505050905090810190601f168015613f8e5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106140265780518252602082019150602081019050602083039250614003565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614088576040519150601f19603f3d011682016040523d82523d6000602084013e61408d565b606091505b5091509150816140fb576000815111156140aa5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806145db6032913960400191505060405180910390fd5b600081806020019051602081101561411257600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000808360010160008481526020019081526020016000205490506000811461427a57600060018203905060006001866000018054905003905060008660000182815481106141e957fe5b906000526020600020015490508087600001848154811061420657fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061423e57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050614280565b60009150505b92915050565b6000614292838361441d565b6142eb5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506142f0565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561439d578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506143cb565b828560000160018303815481106143b057fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561441457506000801b8214155b92505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061448157803560ff19168380011785556144af565b828001600101855582156144af579182015b828111156144ae578235825591602001919060010190614493565b5b5090506144bc919061456f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061450157805160ff191683800117855561452f565b8280016001018555821561452f579182015b8281111561452e578251825591602001919060010190614513565b5b50905061453c919061456f565b5090565b6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b61459191905b8082111561458d576000816000905550600101614575565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734465706f73697420616d6f756e74206c657373207468616e20746865206d696e696d756d4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657254686520656e656d7920646f65736e2774206861766520656e6f7567682062616c616e63652e4552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e6473536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4561636820757365722063616e2068617665206a757374206f6e6520667967687465722e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e596f7572206679676874657220646f65736e2774206861766520656e6f7567682058502e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572596f7572206679676874657220646f65736e2774206861766520656e6f7567682062616c616e63652e4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656454686973206f7065726174696f6e206f6e6c792063616e20626520646f6e6520627920746865206f776e65722ea2646970667358221220f2db70533ea9973d606598bfb7cecdcd87e9ee2b1b9ca0251e8966f4a8c462d964736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636c0360eb1161010f578063b6a46b3b116100a2578063c87b56dd11610071578063c87b56dd14610d5a578063d35bf1d914610e01578063e2bbb15814610e4d578063e985e9c514610e85576101f0565b8063b6a46b3b14610b58578063b88d4fde14610bd1578063b94c940614610cd6578063c287e49314610d22576101f0565b806395d89b41116100de57806395d89b41146109b95780639abc61f514610a3c578063a22cb46514610a85578063a916353614610ad5576101f0565b80636c0360eb146108925780636e8c9a141461091557806370a0823114610933578063958e2d311461098b576101f0565b80632e4148901161018757806349b640c51161015657806349b640c5146106825780634f6ccce7146107aa57806358453fef146107ec5780636352211e14610824576101f0565b80632e414890146104f75780632f745c591461052f5780633ec2d8361461059157806342842e0e14610614576101f0565b8063095ea7b3116101c3578063095ea7b31461036957806318160ddd146103b757806323b872dd146103d55780632db2ede514610443576101f0565b806301ffc9a7146101f5578063035cf1421461025a57806306fdde0314610278578063081812fc146102fb575b600080fd5b6102406004803603602081101561020b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f01565b604051808215151515815260200191505060405180910390f35b610262610f68565b6040518082815260200191505060405180910390f35b610280610f7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c05780820151818401526020810190506102a5565b50505050905090810190601f1680156102ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061101d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b56004803603604081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110b8565b005b6103bf6111fc565b6040518082815260200191505060405180910390f35b610441600480360360608110156103eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061120d565b005b61046f6004803603602081101561045957600080fd5b8101908080359060200190929190505050611283565b60405180806020018360ff1660ff168152602001828103825284818151815260200191508051906020019080838360005b838110156104bb5780820151818401526020810190506104a0565b50505050905090810190601f1680156104e85780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61052d6004803603604081101561050d57600080fd5b810190808035906020019092919080359060200190929190505050611359565b005b61057b6004803603604081101561054557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611422565b6040518082815260200191505060405180910390f35b610612600480360360408110156105a757600080fd5b8101908080359060200190929190803590602001906401000000008111156105ce57600080fd5b8201836020820111156105e057600080fd5b8035906020019184600183028401116401000000008311171561060257600080fd5b909192939192939050505061147d565b005b6106806004803603606081101561062a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115a2565b005b6106ae6004803603602081101561069857600080fd5b81019080803590602001909291905050506115c2565b604051808681526020018060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b838110156107045780820151818401526020810190506106e9565b50505050905090810190601f1680156107315780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101561076a57808201518184015260208101905061074f565b50505050905090810190601f1680156107975780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6107d6600480360360208110156107c057600080fd5b8101908080359060200190929190505050611735565b6040518082815260200191505060405180910390f35b6108226004803603604081101561080257600080fd5b810190808035906020019092919080359060200190929190505050611758565b005b6108506004803603602081101561083a57600080fd5b810190808035906020019092919050505061177f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61089a6117b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108da5780820151818401526020810190506108bf565b50505050905090810190601f1680156109075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61091d611858565b6040518082815260200191505060405180910390f35b6109756004803603602081101561094957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061186b565b6040518082815260200191505060405180910390f35b6109b7600480360360208110156109a157600080fd5b8101908080359060200190929190505050611940565b005b6109c1611ba7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a015780820151818401526020810190506109e6565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6860048036036020811015610a5257600080fd5b8101908080359060200190929190505050611c49565b604051808381526020018281526020019250505060405180910390f35b610ad360048036036040811015610a9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611cdf565b005b610b5660048036036040811015610aeb57600080fd5b810190808035906020019092919080359060200190640100000000811115610b1257600080fd5b820183602082011115610b2457600080fd5b80359060200191846001830284011164010000000083111715610b4657600080fd5b9091929391929390505050611e97565b005b610bcf60048036036020811015610b6e57600080fd5b8101908080359060200190640100000000811115610b8b57600080fd5b820183602082011115610b9d57600080fd5b80359060200191846001830284011164010000000083111715610bbf57600080fd5b9091929391929390505050612125565b005b610cd460048036036080811015610be757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c4e57600080fd5b820183602082011115610c6057600080fd5b80359060200191846001830284011164010000000083111715610c8257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123ca565b005b610d0c60048036036040811015610cec57600080fd5b810190808035906020019092919080359060200190929190505050612442565b6040518082815260200191505060405180910390f35b610d5860048036036040811015610d3857600080fd5b8101908080359060200190929190803590602001909291905050506127bd565b005b610d8660048036036020811015610d7057600080fd5b81019080803590602001909291905050506127e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dc6578082015181840152602081019050610dab565b50505050905090810190601f168015610df35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e4b60048036036080811015610e1757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506129e6565b005b610e8360048036036040811015610e6357600080fd5b8101908080359060200190929190803590602001909291905050506129f8565b005b610ee760048036036040811015610e9b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c75565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006005670de0b6b3a764000002905090565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110135780601f10610fe857610100808354040283529160200191611013565b820191906000526020600020905b815481529060010190602001808311610ff657829003601f168201915b5050505050905090565b600061102882612d09565b61107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614751602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006110c38261177f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061481d6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611169612d26565b73ffffffffffffffffffffffffffffffffffffffff161480611198575061119781611192612d26565b612c75565b5b6111ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806146836038913960400191505060405180910390fd5b6111f78383612d2e565b505050565b60006112086002612de7565b905090565b61121e611218612d26565b82612dfc565b611273576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806148676031913960400191505060405180910390fd5b61127e838383612ef0565b505050565b600c818154811061129057fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133c5780601f106113115761010080835404028352916020019161133c565b820191906000526020600020905b81548152906001019060200180831161131f57829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b816113638161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b60006113f28484612442565b90506000816113ff613133565b111561140b578361140d565b845b905061141b85858385613193565b5050505050565b600061147582600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206133df90919063ffffffff16565b905092915050565b826114878161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b8282600b868154811061151957fe5b90600052602060002090600502016001019190611537929190614440565b50837f553656c6feb05b3e720bd33ad52f9cc39bc80982fb434f80e81391abc4c9dda5848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b6115bd838383604051806020016040528060008152506123ca565b505050565b600b81815481106115cf57fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116815780601f1061165657610100808354040283529160200191611681565b820191906000526020600020905b81548152906001019060200180831161166457829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561171f5780601f106116f45761010080835404028352916020019161171f565b820191906000526020600020905b81548152906001019060200180831161170257829003601f168201915b5050505050908060030154908060040154905085565b60008061174c8360026133f990919063ffffffff16565b50905080915050919050565b80600b838154811061176657fe5b9060005260206000209060050201600401819055505050565b60006117af826040518060600160405280602981526020016146e56029913960026134289092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561184e5780601f106118235761010080835404028352916020019161184e565b820191906000526020600020905b81548152906001019060200180831161183157829003601f168201915b5050505050905090565b60006005670de0b6b3a764000002905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806146bb602a913960400191505060405180910390fd5b611939600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613447565b9050919050565b8061194a8161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b6000600b83815481106119dc57fe5b90600052602060002090600502016004015490506000600b84815481106119ff57fe5b906000526020600020906005020160040181905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611abd57600080fd5b505af1158015611ad1573d6000803e3d6000fd5b505050506040513d6020811015611ae757600080fd5b8101908080519060200190929190505050611b6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5769746864726177207472616e736665722077697468206572726f722e00000081525060200191505060405180910390fd5b827f0c875c8d391179c5cf7ad8303d268efd50b8beb78b671f85cd54bfb91eb8ef40826040518082815260200191505060405180910390a2505050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c3f5780601f10611c1457610100808354040283529160200191611c3f565b820191906000526020600020905b815481529060010190602001808311611c2257829003601f168201915b5050505050905090565b600080611c9e670de0b6b3a7640000611c90611c7686670de0b6b3a764000061345c90919063ffffffff16565b6005670de0b6b3a7640000026134a690919063ffffffff16565b61352c90919063ffffffff16565b9150611cd8670de0b6b3a7640000611cca856005670de0b6b3a7640000026134a690919063ffffffff16565b61352c90919063ffffffff16565b9050915091565b611ce7612d26565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000611d95612d26565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611e42612d26565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b82611ea18161177f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614898602d913960400191505060405180910390fd5b611f7183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050613576565b611fe3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420736b696e2e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600b8581548110611ff257fe5b906000526020600020906005020190506000600d85856040518083838082843780830192505050925050509081526020016040518091039020549050808260030154101561208b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806147f96024913960400191505060405180910390fd5b8484600b888154811061209a57fe5b906000526020600020906005020160020191906120b8929190614440565b50857f546aa5db2f34cd0c10c3bf80054ede7658175a11189cbeee6241bd45952c3a99868660405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a2505050505050565b60006121303361186b565b14612186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061477d6024913960400191505060405180910390fd5b6000600b805490509050600b6040518060a0016040528083815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600c6000815481106121fb57fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122a05780601f10612275576101008083540402835291602001916122a0565b820191906000526020600020905b81548152906001019060200180831161228357829003601f168201915b5050505050815260200160018152602001600081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010190805190602001906123059291906144c0565b5060408201518160020190805190602001906123229291906144c0565b506060820151816003015560808201518160040155505061234333826135eb565b3373ffffffffffffffffffffffffffffffffffffffff167f1243c32293ccfe8a2001f7de06e504e0ffb98f63144253faa43123a5cffe93dc82858560405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a2505050565b6123db6123d5612d26565b83612dfc565b612430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806148676031913960400191505060405180910390fd5b61243c848484846137df565b50505050565b600061244c614540565b600b848154811061245957fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125155780601f106124ea57610100808354040283529160200191612515565b820191906000526020600020905b8154815290600101906020018083116124f857829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125b75780601f1061258c576101008083540402835291602001916125b7565b820191906000526020600020905b81548152906001019060200180831161259a57829003601f168201915b505050505081526020016003820154815260200160048201548152505090506125de614540565b600b84815481106125eb57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126a75780601f1061267c576101008083540402835291602001916126a7565b820191906000526020600020905b81548152906001019060200180831161268a57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127495780601f1061271e57610100808354040283529160200191612749565b820191906000526020600020905b81548152906001019060200180831161272c57829003601f168201915b505050505081526020016003820154815260200160048201548152505090506127b36127868260600151846060015161385190919063ffffffff16565b6127a5670de0b6b3a764000085606001516134a690919063ffffffff16565b61352c90919063ffffffff16565b9250505092915050565b80600b83815481106127cb57fe5b9060005260206000209060050201600301819055505050565b60606127ef82612d09565b612844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806147ca602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128ed5780601f106128c2576101008083540402835291602001916128ed565b820191906000526020600020905b8154815290600101906020018083116128d057829003601f168201915b5050505050905060008151141561291657604051806020016040528060008152509150506129e1565b60098160405160200180838054600181600116156101000203166002900480156129775780601f10612955576101008083540402835291820191612977565b820191906000526020600020905b815481529060010190602001808311612963575b505082805190602001908083835b602083106129a85780518252602082019150602081019050602083039250612985565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6129f284848484613193565b50505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612ad557600080fd5b505af1158015612ae9573d6000803e3d6000fd5b505050506040513d6020811015612aff57600080fd5b8101908080519060200190929190505050612b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4465706f736974207472616e736665722077697468206572726f722e0000000081525060200191505060405180910390fd5b6005670de0b6b3a764000002811015612be6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806145b76024913960400191505060405180910390fd5b612c1781600b8481548110612bf757fe5b90600052602060002090600502016004015461385190919063ffffffff16565b600b8381548110612c2457fe5b906000526020600020906005020160040181905550817f06da3309189fa49284f335d2c2bcb4cb0b8ad2a59ad92a9bdebeeb8f1ceba511826040518082815260200191505060405180910390a25050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000612d1f8260026138d990919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16612da18361177f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000612df5826000016138f3565b9050919050565b6000612e0782612d09565b612e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614657602c913960400191505060405180910390fd5b6000612e678361177f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612ed657508373ffffffffffffffffffffffffffffffffffffffff16612ebe8461101d565b73ffffffffffffffffffffffffffffffffffffffff16145b80612ee75750612ee68185612c75565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612f108261177f565b73ffffffffffffffffffffffffffffffffffffffff1614612f7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806147a16029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613002576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806146336024913960400191505060405180910390fd5b61300d838383613904565b613018600082612d2e565b61306981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061390990919063ffffffff16565b506130bb81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061392390919063ffffffff16565b506130d28183600261393d9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061318e6064670de0b6b3a76400006064424460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060001c8161317e57fe5b060261352c90919063ffffffff16565b905090565b60008061319f83611c49565b9150915080600b87815481106131b157fe5b906000526020600020906005020160040154101561321a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061483e6029913960400191505060405180910390fd5b81600b868154811061322857fe5b9060005260206000209060050201600401541015613291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061460d6026913960400191505060405180910390fd5b60008487146132a057816132a2565b825b905060008786146132b357876132b5565b865b9050600b86815481106132c457fe5b90600052602060002090600502016003016000815480929190600101919050555061331682600b88815481106132f657fe5b90600052602060002090600502016004015461385190919063ffffffff16565b600b878154811061332357fe5b90600052602060002090600502016004018190555061336982600b838154811061334957fe5b90600052602060002090600502016004015461345c90919063ffffffff16565b600b828154811061337657fe5b90600052602060002090600502016004018190555061339486613972565b50877f9710e56297b5e8778d11e7e8579c9906ed103bf38376059777631205ff0c57788888604051808381526020018281526020019250505060405180910390a25050505050505050565b60006133ee8360000183613aaf565b60001c905092915050565b60008060008061340c8660000186613b32565b915091508160001c8160001c8090509350935050509250929050565b600061343b846000018460001b84613bcb565b60001c90509392505050565b600061345582600001613cc1565b9050919050565b600061349e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613cd2565b905092915050565b6000808314156134b95760009050613526565b60008284029050828482816134ca57fe5b0414613521576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806147306021913960400191505060405180910390fd5b809150505b92915050565b600061356e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613d92565b905092915050565b600080600d836040518082805190602001908083835b602083106135af578051825260208201915060208101905060208303925061358c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561368e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61369781612d09565b1561370a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61371660008383613904565b61376781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061392390919063ffffffff16565b5061377e8183600261393d9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6137ea848484612ef0565b6137f684848484613e58565b61384b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806145db6032913960400191505060405180910390fd5b50505050565b6000808284019050838110156138cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006138eb836000018360001b61417b565b905092915050565b600081600001805490509050919050565b505050565b600061391b836000018360001b61419e565b905092915050565b6000613935836000018360001b614286565b905092915050565b6000613969846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6142f6565b90509392505050565b606060006001600c805490500390505b60008110613aa957600c818154811061399757fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff16600b84815481106139c657fe5b90600052602060002090600502016003015410613a9b57600c81815481106139ea57fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a8f5780601f10613a6457610100808354040283529160200191613a8f565b820191906000526020600020905b815481529060010190602001808311613a7257829003601f168201915b50505050509150613aa9565b808060019003915050613982565b50919050565b600081836000018054905011613b10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806145956022913960400191505060405180910390fd5b826000018281548110613b1f57fe5b9060005260206000200154905092915050565b60008082846000018054905011613b94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061470e6022913960400191505060405180910390fd5b6000846000018481548110613ba557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390613c92576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613c57578082015181840152602081019050613c3c565b50505050905090810190601f168015613c845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110613ca557fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000838311158290613d7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613d44578082015181840152602081019050613d29565b50505050905090810190601f168015613d715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290613e3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613e03578082015181840152602081019050613de8565b50505050905090810190601f168015613e305780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581613e4a57fe5b049050809150509392505050565b6000613e798473ffffffffffffffffffffffffffffffffffffffff166143d2565b613e865760019050614173565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b613eb1612d26565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613f61578082015181840152602081019050613f46565b50505050905090810190601f168015613f8e5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106140265780518252602082019150602081019050602083039250614003565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614088576040519150601f19603f3d011682016040523d82523d6000602084013e61408d565b606091505b5091509150816140fb576000815111156140aa5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806145db6032913960400191505060405180910390fd5b600081806020019051602081101561411257600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000808360010160008481526020019081526020016000205490506000811461427a57600060018203905060006001866000018054905003905060008660000182815481106141e957fe5b906000526020600020015490508087600001848154811061420657fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061423e57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050614280565b60009150505b92915050565b6000614292838361441d565b6142eb5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506142f0565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561439d578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506143cb565b828560000160018303815481106143b057fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561441457506000801b8214155b92505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061448157803560ff19168380011785556144af565b828001600101855582156144af579182015b828111156144ae578235825591602001919060010190614493565b5b5090506144bc919061456f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061450157805160ff191683800117855561452f565b8280016001018555821561452f579182015b8281111561452e578251825591602001919060010190614513565b5b50905061453c919061456f565b5090565b6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b61459191905b8082111561458d576000816000905550600101614575565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734465706f73697420616d6f756e74206c657373207468616e20746865206d696e696d756d4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657254686520656e656d7920646f65736e2774206861766520656e6f7567682062616c616e63652e4552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e6473536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4561636820757365722063616e2068617665206a757374206f6e6520667967687465722e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e596f7572206679676874657220646f65736e2774206861766520656e6f7567682058502e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572596f7572206679676874657220646f65736e2774206861766520656e6f7567682062616c616e63652e4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656454686973206f7065726174696f6e206f6e6c792063616e20626520646f6e6520627920746865206f776e65722ea2646970667358221220f2db70533ea9973d606598bfb7cecdcd87e9ee2b1b9ca0251e8966f4a8c462d964736f6c63430006020033",
  "sourceMap": "52:566:4:-:0;;;92:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:50:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;92:50:4;;;;;;;;;;;;;;;;134:4;3354:365:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:40:6;385:10;737:20;;718:18;;;:40;;:::i;:::-;3434:4:11;3426:5;:12;;;;;;;;;;;;:::i;:::-;;3458:6;3448:7;:16;;;;;;;;;;;;:::i;:::-;;3552:40;2632:10;3571:20;;3552:18;;;:40;;:::i;:::-;3602:49;2964:10;3621:29;;3602:18;;;:49;;:::i;:::-;3661:51;3337:10;3680:31;;3661:18;;;:51;;:::i;:::-;3354:365;;1341:4:1::1;1335:3;;:10;;;;;;;;;;;;;;;;;;1379:5;1390:34;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1421:1;1390:34;;;;::::0;1379:46:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1379:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:5;1446:40;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1482:2;1446:40;;;;::::0;1435:52:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1435:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:5;1508:40;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1544:2;1508:40;;;;::::0;1497:52:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1497:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:5;1570:38;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1604:2;1570:38;;;;::::0;1559:50:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1559:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:5;1630:34;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1660:2;1630:34;;;;::::0;1619:46:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1619:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1686:35;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1717:2;1686:35;;;;::::0;1675:47:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1675:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:5;1743:36;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1775:2;1743:36;;;;::::0;1732:48:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1732:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1790:5;1801:35;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1832:2;1801:35;;;;::::0;1790:47:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1790:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:5;1858:37;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;1890:3;1858:37;;;;::::0;1847:49:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1847:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:9;1924:1:::0;1912:13:::1;;1907:121;1931:5;:12;;;;1927:1;:16;1907:121;;;2000:5;2006:1;2000:8;;;;;;;;;;;;;;;;;;:17;;;;;;;;;;;;1964:53;;:18;1983:5;1989:1;1983:8;;;;;;;;;;;;;;;;;;:13;;1964:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:53;;;;1945:3;;;;;1907:121;;;;1263:771:::0;92:50:4;52:566;;1449:198:6;1547:10;1532:25;;:11;:25;;;;;1524:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1600:20;:33;1621:11;1600:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1449:198;:::o;52:566:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "52:566:4:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:566:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:140:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:140:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2040:96:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4625:90:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4625:90:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8519:209;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8519:209:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7853:381;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7853:381:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6733:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10230:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10230:300:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1020:19:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1020:19:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1020:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3835:359;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3835:359:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6428:152:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6428:152:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3305:199:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3305:199:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3305:199:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3305:199:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3305:199:1;;;;;;;;;;;;:::i;:::-;;11179:149:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11179:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;989:25:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;989:25:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;989:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;989:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7271:161:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7271:161:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;492:124:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:124:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4353:167:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4353:167:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5967:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5967:87:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2142:88:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3923:211:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3923:211:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2990:309:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2990:309:1;;;;;;;;;;;;;;;;;:::i;:::-;;4824:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4824:94:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3575:254:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3575:254:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9027:290:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9027:290:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5138:455:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5138:455:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5138:455:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5138:455:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5138:455:1;;;;;;;;;;;;:::i;:::-;;2236:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2236:361:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2236:361:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2236:361:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2236:361:1;;;;;;;;;;;;:::i;:::-;;12051:282:11;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12051:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12051:282:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12051:282:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12051:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12051:282:11;;;;;;;;;;;;;;;:::i;:::-;;5599:353:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5599:353:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;382:104:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;382:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5221:552:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5221:552:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5221:552:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;148:228:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;148:228:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2603:381:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2603:381:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9639:154:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9639:154:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;915:140:6;992:4;1015:20;:33;1036:11;1015:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:40;;915:140;;;:::o;2040:96:1:-;2092:7;303:1;250:10;297:7;2111:18;;2040:96;:::o;4625:90:11:-;4671:13;4703:5;4696:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:90;:::o;8519:209::-;8587:7;8614:16;8622:7;8614;:16::i;:::-;8606:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8697:15;:24;8713:7;8697:24;;;;;;;;;;;;;;;;;;;;;8690:31;;8519:209;;;:::o;7853:381::-;7933:13;7949:16;7957:7;7949;:16::i;:::-;7933:32;;7989:5;7983:11;;:2;:11;;;;7975:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8067:5;8051:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;8076:37;8093:5;8100:12;:10;:12::i;:::-;8076:16;:37::i;:::-;8051:62;8043:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8206:21;8215:2;8219:7;8206:8;:21::i;:::-;7853:381;;;:::o;6733:200::-;6786:7;6905:21;:12;:19;:21::i;:::-;6898:28;;6733:200;:::o;10230:300::-;10389:41;10408:12;:10;:12::i;:::-;10422:7;10389:18;:41::i;:::-;10381:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10495:28;10505:4;10511:2;10515:7;10495:9;:28::i;:::-;10230:300;;;:::o;1020:19:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3835:359::-;3917:13;1170:19;1178:10;1170:7;:19::i;:::-;1156:33;;:10;:33;;;1148:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3942:22:::1;3967:49;3991:13;4006:9;3967:23;:49::i;:::-;3942:74;;4026:16;4059:14;4046:9;:7;:9::i;:::-;:27;;4045:57;;4093:9;4045:57;;;4077:13;4045:57;4026:76;;4113:74;4136:13;4151:9;4162:8;4172:14;4113:22;:74::i;:::-;1249:1;;3835:359:::0;;;:::o;6428:152:11:-;6517:7;6543:30;6567:5;6543:13;:20;6557:5;6543:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6536:37;;6428:152;;;;:::o;3305:199:1:-;3388:10;1170:19;1178:10;1170:7;:19::i;:::-;1156:33;;:10;:33;;;1148:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3438:8:::1;;3410;3419:10;3410:20;;;;;;;;;;;;;;;;;;:25;;:36;;;;;;;:::i;:::-;;3476:10;3461:36;3488:8;;3461:36;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3461:36:1;;;;;;;;;;;;;;3305:199:::0;;;;:::o;11179:149:11:-;11282:39;11299:4;11305:2;11309:7;11282:39;;;;;;;;;;;;:16;:39::i;:::-;11179:149;;;:::o;989:25:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7271:161:11:-;7338:7;7358:15;7379:22;7395:5;7379:12;:15;;:22;;;;:::i;:::-;7357:44;;;7418:7;7411:14;;;7271:161;;;:::o;492:124:4:-;601:8;570;579:10;570:20;;;;;;;;;;;;;;;;;;:28;;:39;;;;492:124;;:::o;4353:167:11:-;4417:7;4443:70;4460:7;4443:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4436:77;;4353:167;;;:::o;5967:87::-;6007:13;6039:8;6032:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5967:87;:::o;2142:88:1:-;2188:7;345:1;250:10;339:7;2207:16;;2142:88;:::o;3923:211:11:-;3987:7;4031:1;4014:19;;:5;:19;;;;4006:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4098:29;:13;:20;4112:5;4098:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4091:36;;3923:211;;;:::o;2990:309:1:-;3052:10;1170:19;1178:10;1170:7;:19::i;:::-;1156:33;;:10;:33;;;1148:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3074:15:::1;3092:8;3101:10;3092:20;;;;;;;;;;;;;;;;;;:28;;;3074:46;;3161:1;3130:8;3139:10;3130:20;;;;;;;;;;;;;;;;;;:28;;:32;;;;3180:3;;;;;;;;;;;:12;;;3193:10;3205:7;3180:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;3180:33:1;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3180:33:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;3180:33:1;;;;;;;;;;;;;;;;3172:75;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3272:10;3262:30;3284:7;3262:30;;;;;;;;;;;;;;;;;;1249:1;2990:309:::0;;:::o;4824:94:11:-;4872:13;4904:7;4897:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4824:94;:::o;3575:254:1:-;3651:17;3670:18;3712:48;250:10;3712:39;3726:24;3734:15;250:10;3726:7;;:24;;;;:::i;:::-;345:1;250:10;339:7;3712:13;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;3700:60;;3783:39;250:10;3783:30;3797:15;345:1;250:10;339:7;3783:13;;:30;;;;:::i;:::-;:34;;:39;;;;:::i;:::-;3770:52;;3575:254;;;:::o;9027:290:11:-;9141:12;:10;:12::i;:::-;9129:24;;:8;:24;;;;9121:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9239:8;9194:18;:32;9213:12;:10;:12::i;:::-;9194:32;;;;;;;;;;;;;;;:42;9227:8;9194:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;9291:8;9262:48;;9277:12;:10;:12::i;:::-;9262:48;;;9301:8;9262:48;;;;;;;;;;;;;;;;;;;;;;9027:290;;:::o;5138:455:1:-;5225:10;1170:19;1178:10;1170:7;:19::i;:::-;1156:33;;:10;:33;;;1148:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5255:22:::1;5268:8;;5255:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5255:22:1;;;;;;:12;:22::i;:::-;5247:48;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5306:23;5332:8;5341:10;5332:20;;;;;;;;;;;;;;;;;;5306:46;;5362:16;5381:18;5400:8;;5381:28;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;5381:28:1;;;;;;;;;;;;;;;;;;;5362:47;;5441:8;5427:7;:10;;;:22;;5419:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5529:8;;5501;5510:10;5501:20;;;;;;;;;;;;;;;;;;:25;;:36;;;;;;;:::i;:::-;;5565:10;5553:33;5577:8;;5553:33;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5553:33:1;;;;;;;;;;;;;;1249:1;;5138:455:::0;;;;:::o;2236:361::-;2327:1;2302:21;2312:10;2302:9;:21::i;:::-;:26;2294:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2380:11;2394:8;:15;;;;2380:29;;2419:8;2433:71;;;;;;;;2446:3;2433:71;;;;2457:5;;2433:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2433:71:1;;;;;;;;;;2470:5;2476:1;2470:8;;;;;;;;;;;;;;;;;;:13;;2433:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:1;2433:71;;;;2501:1;2433:71;;;2419:86;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2419:86:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2515:22;2521:10;2533:3;2515:5;:22::i;:::-;2567:10;2552:38;;;2579:3;2584:5;;2552:38;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2552:38:1;;;;;;;;;;;;;;;2236:361;;;:::o;12051:282:11:-;12182:41;12201:12;:10;:12::i;:::-;12215:7;12182:18;:41::i;:::-;12174:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12287:39;12301:4;12307:2;12311:7;12320:5;12287:13;:39::i;:::-;12051:282;;;;:::o;5599:353:1:-;5719:22;5757:25;;:::i;:::-;5785:8;5794:13;5785:23;;;;;;;;;;;;;;;;;;5757:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5818:21;;:::i;:::-;5842:8;5851:9;5842:19;;;;;;;;;;;;;;;;;;5818:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5889:56;5916:28;5934:6;:9;;;5916:10;:13;;;:17;;:28;;;;:::i;:::-;5889:22;250:10;5889;:13;;;:17;;:22;;;;:::i;:::-;:26;;:56;;;;:::i;:::-;5872:73;;5599:353;;;;;;:::o;382:104:4:-;476:3;450:8;459:10;450:20;;;;;;;;;;;;;;;;;;:23;;:29;;;;382:104;;:::o;5221:552:11:-;5286:13;5319:16;5327:7;5319;:16::i;:::-;5311:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5398:23;5424:10;:19;5435:7;5424:19;;;;;;;;;;;5398:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5578:1;5557:9;5551:23;:28;5547:220;;;5595:9;;;;;;;;;;;;;;;;;5547:220;5735:8;5745:9;5718:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5718:37:11;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5718:37:11;;;5704:52;;;5221:552;;;;:::o;148:228:4:-;295:74;318:12;332:8;342:9;353:15;295:22;:74::i;:::-;148:228;;;;:::o;2603:381:1:-;2684:3;;;;;;;;;;;:16;;;2701:10;2721:4;2728:7;2684:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2684:52:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2684:52:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2684:52:1;;;;;;;;;;;;;;;;2676:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:1;250:10;297:7;2787;:22;;2779:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2891:41;2924:7;2891:8;2900:10;2891:20;;;;;;;;;;;;;;;;;;:28;;;:32;;:41;;;;:::i;:::-;2860:8;2869:10;2860:20;;;;;;;;;;;;;;;;;;:28;;:72;;;;2957:10;2947:30;2969:7;2947:30;;;;;;;;;;;;;;;;;;2603:381;;:::o;9639:154:11:-;9728:4;9751:18;:25;9770:5;9751:25;;;;;;;;;;;;;;;:35;9777:8;9751:35;;;;;;;;;;;;;;;;;;;;;;;;;9744:42;;9639:154;;;;:::o;13502:117::-;13559:4;13582:30;13604:7;13582:12;:21;;:30;;;;:::i;:::-;13575:37;;13502:117;;;:::o;735:104:5:-;788:15;822:10;815:17;;735:104;:::o;20476:155:11:-;20568:2;20541:15;:24;20557:7;20541:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;20616:7;20612:2;20585:39;;20594:16;20602:7;20594;:16::i;:::-;20585:39;;;;;;;;;;;;20476:155;;:::o;6284:121:17:-;6353:7;6379:19;6387:3;:10;;6379:7;:19::i;:::-;6372:26;;6284:121;;;:::o;13980:329:11:-;14065:4;14089:16;14097:7;14089;:16::i;:::-;14081:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14164:13;14180:16;14188:7;14180;:16::i;:::-;14164:32;;14225:5;14214:16;;:7;:16;;;:51;;;;14258:7;14234:31;;:20;14246:7;14234:11;:20::i;:::-;:31;;;14214:51;:87;;;;14269:32;14286:5;14293:7;14269:16;:32::i;:::-;14214:87;14206:96;;;13980:329;;;;:::o;17492:559::-;17609:4;17589:24;;:16;17597:7;17589;:16::i;:::-;:24;;;17581:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17691:1;17677:16;;:2;:16;;;;17669:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17745:39;17766:4;17772:2;17776:7;17745:20;:39::i;:::-;17846:29;17863:1;17867:7;17846:8;:29::i;:::-;17886:35;17913:7;17886:13;:19;17900:4;17886:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;17931:30;17953:7;17931:13;:17;17945:2;17931:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;17972:29;17989:7;17998:2;17972:12;:16;;:29;;;;;:::i;:::-;;18036:7;18032:2;18017:27;;18026:4;18017:27;;;;;;;;;;;;17492:559;;;:::o;6418:171:1:-;6460:7;6486:96;6578:3;250:10;6562:3;6523:15;6540:16;6506:51;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6506:51:1;;;6496:62;;;;;;6488:71;;:77;;;;;;6487:85;6486:91;;:96;;;;:::i;:::-;6479:103;;6418:171;:::o;4200:932::-;4376:17;4395:18;4417:37;4438:15;4417:20;:37::i;:::-;4375:79;;;;4508:10;4473:8;4482:13;4473:23;;;;;;;;;;;;;;;;;;:31;;;:45;;4465:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4613:9;4582:8;4591:9;4582:19;;;;;;;;;;;;;;;;;;:27;;;:40;;4574:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4676:13;4710:9;4693:13;:26;4692:53;;4735:10;4692:53;;;4723:9;4692:53;4676:69;;4755:15;4786:13;4773:9;:26;:54;;4814:13;4773:54;;;4802:9;4773:54;4755:72;;4838:8;4847:9;4838:19;;;;;;;;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;4902:38;4934:5;4902:8;4911:9;4902:19;;;;;;;;;;;;;;;;;;:27;;;:31;;:38;;;;:::i;:::-;4872:8;4881:9;4872:19;;;;;;;;;;;;;;;;;;:27;;:68;;;;4978:36;5008:5;4978:8;4987:7;4978:17;;;;;;;;;;;;;;;;;;:25;;;:29;;:36;;;;:::i;:::-;4950:8;4959:7;4950:17;;;;;;;;;;;;;;;;;;:25;;:64;;;;5025:30;5045:9;5025:19;:30::i;:::-;;5089:13;5071:54;5104:9;5115;5071:54;;;;;;;;;;;;;;;;;;;;;;;;4200:932;;;;;;;;:::o;7449:135:18:-;7520:7;7554:22;7558:3;:10;;7570:5;7554:3;:22::i;:::-;7546:31;;7539:38;;7449:135;;;;:::o;6733:224:17:-;6813:7;6822;6842:11;6855:13;6872:22;6876:3;:10;;6888:5;6872:3;:22::i;:::-;6841:53;;;;6920:3;6912:12;;6942:5;6934:14;;6904:46;;;;;;;;;6733:224;;;;;:::o;7376:202::-;7483:7;7525:44;7530:3;:10;;7550:3;7542:12;;7556;7525:4;:44::i;:::-;7517:53;;7502:69;;7376:202;;;;;:::o;7005:112:18:-;7065:7;7091:19;7099:3;:10;;7091:7;:19::i;:::-;7084:26;;7005:112;;;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2119:459::-;2177:7;2423:1;2418;:6;2414:45;;;2447:1;2440:8;;;;2414:45;2469:9;2485:1;2481;:5;2469:17;;2513:1;2508;2504;:5;;;;;;:10;2496:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2570:1;2563:8;;;2119:459;;;;;:::o;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3110:46;;3033:130;;;;:::o;6595:136:1:-;6660:16;6723:1;6695:18;6714:5;6695:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6695:25:1;;;;;;;;;;;;;;;;;;;;;;:29;6688:36;;6595:136;;;:::o;16039:393:11:-;16132:1;16118:16;;:2;:16;;;;16110:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16190:16;16198:7;16190;:16::i;:::-;16189:17;16181:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16250:45;16279:1;16283:2;16287:7;16250:20;:45::i;:::-;16306:30;16328:7;16306:13;:17;16320:2;16306:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;16347:29;16364:7;16373:2;16347:12;:16;;:29;;;;;:::i;:::-;;16417:7;16413:2;16392:33;;16409:1;16392:33;;;;;;;;;;;;16039:393;;:::o;13038:269::-;13151:28;13161:4;13167:2;13171:7;13151:9;:28::i;:::-;13197:48;13220:4;13226:2;13230:7;13239:5;13197:22;:48::i;:::-;13189:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13038:269;;;;:::o;834:176:8:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6052:149:17:-;6136:4;6159:35;6169:3;:10;;6189:3;6181:12;;6159:9;:35::i;:::-;6152:42;;6052:149;;;;:::o;3744:108::-;3800:7;3826:3;:12;;:19;;;;3819:26;;3744:108;;;:::o;21163:93:11:-;;;;:::o;6564:135:18:-;6634:4;6657:35;6665:3;:10;;6685:5;6677:14;;6657:7;:35::i;:::-;6650:42;;6564:135;;;;:::o;6267:129::-;6334:4;6357:32;6362:3;:10;;6382:5;6374:14;;6357:4;:32::i;:::-;6350:39;;6267:129;;;;:::o;5500:174:17:-;5589:4;5612:55;5617:3;:10;;5637:3;5629:12;;5659:5;5651:14;;5643:23;;5612:4;:55::i;:::-;5605:62;;5500:174;;;;;:::o;5958:312:1:-;6030:21;6068:9;6095:1;6080:5;:12;;;;:16;6068:28;;6063:201;6103:1;6098;:6;6063:201;;6156:5;6162:1;6156:8;;;;;;;;;;;;;;;;;;:17;;;;;;;;;;;;6129:44;;:8;6138:10;6129:20;;;;;;;;;;;;;;;;;;:23;;;:44;6125:129;;6203:5;6209:1;6203:8;;;;;;;;;;;;;;;;;;:13;;6193:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6234:5;;6125:129;6106:3;;;;;;;;6063:201;;;;5958:312;;;:::o;4223:201:18:-;4290:7;4338:5;4317:3;:11;;:18;;;;:26;4309:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4399:3;:11;;4411:5;4399:18;;;;;;;;;;;;;;;;4392:25;;4223:201;;;;:::o;4195:274:17:-;4262:7;4271;4320:5;4298:3;:12;;:19;;;;:27;4290:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:22;4400:3;:12;;4413:5;4400:19;;;;;;;;;;;;;;;;;;4375:44;;4437:5;:10;;;4449:5;:12;;;4429:33;;;;;4195:274;;;;;:::o;4876:315::-;4970:7;4989:16;5008:3;:12;;:17;5021:3;5008:17;;;;;;;;;;;;4989:36;;5055:1;5043:8;:13;;5058:12;5035:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5035:36:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5124:3;:12;;5148:1;5137:8;:12;5124:26;;;;;;;;;;;;;;;;;;:33;;;5117:40;;;4876:315;;;;;:::o;3784:107:18:-;3840:7;3866:3;:11;;:18;;;;3859:25;;3784:107;;;:::o;1692:187:8:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;3638:338::-;3724:7;3821:1;3817;:5;3824:12;3809:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3809:28:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;3847:17;;3968:1;3961:8;;;3638:338;;;;;:::o;19420:1050:11:-;19540:4;19565:15;:2;:13;;;:15::i;:::-;19560:58;;19603:4;19596:11;;;;19560:58;19687:12;19701:23;19728:2;:7;;19772:45;;;19831:12;:10;:12::i;:::-;19857:4;19875:7;19896:5;19736:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19736:175:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;19736:175:11;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;19736:175:11;19728:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;19728:184:11;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;19686:226:11;;;;19927:7;19922:542;;19974:1;19954:10;:17;:21;19950:376;;;20119:10;20113:17;20179:15;20166:10;20162:2;20158:19;20151:44;20068:145;20251:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19922:542;20356:13;20383:10;20372:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20372:32:11;;;;;;;;;;;;;;;;20356:48;;970:10;20436:16;;20426:26;;;:6;:26;;;;20418:35;;;;;19420:1050;;;;;;;:::o;3531:123:17:-;3602:4;3646:1;3625:3;:12;;:17;3638:3;3625:17;;;;;;;;;;;;:22;;3618:29;;3531:123;;;;:::o;1983:1512:18:-;2049:4;2165:18;2186:3;:12;;:19;2199:5;2186:19;;;;;;;;;;;;2165:40;;2234:1;2220:10;:15;2216:1273;;2577:21;2614:1;2601:10;:14;2577:38;;2629:17;2670:1;2649:3;:11;;:18;;;;:22;2629:42;;2911:17;2931:3;:11;;2943:9;2931:22;;;;;;;;;;;;;;;;2911:42;;3074:9;3045:3;:11;;3057:13;3045:26;;;;;;;;;;;;;;;:38;;;;3191:1;3175:13;:17;3149:3;:12;;:23;3162:9;3149:23;;;;;;;;;;;:43;;;;3298:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3390:3;:12;;:19;3403:5;3390:19;;;;;;;;;;;3383:26;;;3431:4;3424:11;;;;;;;;2216:1273;3473:5;3466:12;;;1983:1512;;;;;:::o;1411:404::-;1474:4;1495:21;1505:3;1510:5;1495:9;:21::i;:::-;1490:319;;1532:3;:11;;1549:5;1532:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1532:23:18;;;;;;;;;;;;;;;;;;;1712:3;:11;;:18;;;;1690:3;:12;;:19;1703:5;1690:19;;;;;;;;;;;:40;;;;1751:4;1744:11;;;;1490:319;1793:5;1786:12;;1411:404;;;;;:::o;1089:678:17:-;1165:4;1279:16;1298:3;:12;;:17;1311:3;1298:17;;;;;;;;;;;;1279:36;;1342:1;1330:8;:13;1326:435;;;1396:3;:12;;1414:38;;;;;;;;1431:3;1414:38;;;;1444:5;1414:38;;;1396:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1396:57:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:3;:12;;:19;;;;1588:3;:12;;:17;1601:3;1588:17;;;;;;;;;;;:39;;;;1648:4;1641:11;;;;;1326:435;1719:5;1683:3;:12;;1707:1;1696:8;:12;1683:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;1745:5;1738:12;;;1089:678;;;;;;:::o;685:610:16:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;3576:127:18:-;3649:4;3695:1;3672:3;:12;;:19;3685:5;3672:19;;;;;;;;;;;;:24;;3665:31;;3576:127;;;;:::o;52:566:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.6.2;\n\nimport \"../Fyghters.sol\";\n\n\ncontract FyghtersMock is Fyghters {\n    constructor(LoomDai _dai) public Fyghters(_dai) {}\n\n    function deterministicChallenge(uint256 _myFyghterId, uint256 _enemyId, uint256 _winnerId, uint256 _winProbability)\n        external\n    {\n        processChallengeResult(_myFyghterId, _enemyId, _winnerId, _winProbability);\n    }\n\n    function updateXp(uint256 _fyghterId, uint256 _xp) public {\n        fyghters[_fyghterId].xp = _xp;\n    }\n\n    function updateBalance(uint256 _fyghterId, uint256 _balance) public {\n        fyghters[_fyghterId].balance = _balance;\n    }\n}\n",
  "sourcePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol",
  "ast": {
    "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol",
    "exportedSymbols": {
      "FyghtersMock": [
        948
      ]
    },
    "id": 949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 886,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/Fyghters.sol",
        "file": "../Fyghters.sol",
        "id": 887,
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 774,
        "src": "24:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 888,
              "name": "Fyghters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 773,
              "src": "77:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fyghters_$773",
                "typeString": "contract Fyghters"
              }
            },
            "id": 889,
            "nodeType": "InheritanceSpecifier",
            "src": "77:8:4"
          }
        ],
        "contractDependencies": [
          773,
          975,
          1028,
          1038,
          2689,
          2792,
          2819,
          2842
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 948,
        "linearizedBaseContracts": [
          948,
          773,
          2689,
          2819,
          2842,
          2792,
          1028,
          1038,
          975
        ],
        "name": "FyghtersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "140:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 898,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 894,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 891,
                    "src": "134:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LoomDai_$827",
                      "typeString": "contract LoomDai"
                    }
                  }
                ],
                "id": 895,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "Fyghters",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 773,
                  "src": "125:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Fyghters_$773_$",
                    "typeString": "type(contract Fyghters)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "125:14:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 898,
                  "src": "104:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LoomDai_$827",
                    "typeString": "contract LoomDai"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 890,
                    "name": "LoomDai",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 827,
                    "src": "104:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LoomDai_$827",
                      "typeString": "contract LoomDai"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "103:14:4"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:0:4"
            },
            "scope": 948,
            "src": "92:50:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "285:91:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 910,
                        "name": "_myFyghterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "318:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 911,
                        "name": "_enemyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "332:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 912,
                        "name": "_winnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "342:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 913,
                        "name": "_winProbability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "353:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 909,
                      "name": "processChallengeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "295:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "295:74:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d35bf1d9",
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deterministicChallenge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "name": "_myFyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "180:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "name": "_enemyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "202:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "name": "_winnerId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "220:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "name": "_winProbability",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "239:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "179:84:4"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:4"
            },
            "scope": 948,
            "src": "148:228:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "440:46:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "450:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$106_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 926,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 925,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "459:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "450:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$106_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 103,
                      "src": "450:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 928,
                      "name": "_xp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "476:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "450:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "450:29:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c287e493",
            "id": 932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateXp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 932,
                  "src": "400:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 921,
                  "name": "_xp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 932,
                  "src": "420:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:33:4"
            },
            "returnParameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:4"
            },
            "scope": 948,
            "src": "382:104:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 946,
              "nodeType": "Block",
              "src": "560:56:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 939,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "570:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$106_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 941,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "579:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "570:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$106_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105,
                      "src": "570:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 943,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "601:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "570:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "570:39:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "58453fef",
            "id": 947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 947,
                  "src": "515:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 947,
                  "src": "535:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:38:4"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:4"
            },
            "scope": 948,
            "src": "492:124:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 949,
        "src": "52:566:4"
      }
    ],
    "src": "0:619:4"
  },
  "legacyAST": {
    "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol",
    "exportedSymbols": {
      "FyghtersMock": [
        948
      ]
    },
    "id": 949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 886,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/Fyghters.sol",
        "file": "../Fyghters.sol",
        "id": 887,
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 774,
        "src": "24:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 888,
              "name": "Fyghters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 773,
              "src": "77:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fyghters_$773",
                "typeString": "contract Fyghters"
              }
            },
            "id": 889,
            "nodeType": "InheritanceSpecifier",
            "src": "77:8:4"
          }
        ],
        "contractDependencies": [
          773,
          975,
          1028,
          1038,
          2689,
          2792,
          2819,
          2842
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 948,
        "linearizedBaseContracts": [
          948,
          773,
          2689,
          2819,
          2842,
          2792,
          1028,
          1038,
          975
        ],
        "name": "FyghtersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "140:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 898,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 894,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 891,
                    "src": "134:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LoomDai_$827",
                      "typeString": "contract LoomDai"
                    }
                  }
                ],
                "id": 895,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "Fyghters",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 773,
                  "src": "125:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Fyghters_$773_$",
                    "typeString": "type(contract Fyghters)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "125:14:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 898,
                  "src": "104:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LoomDai_$827",
                    "typeString": "contract LoomDai"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 890,
                    "name": "LoomDai",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 827,
                    "src": "104:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LoomDai_$827",
                      "typeString": "contract LoomDai"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "103:14:4"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:0:4"
            },
            "scope": 948,
            "src": "92:50:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "285:91:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 910,
                        "name": "_myFyghterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "318:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 911,
                        "name": "_enemyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "332:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 912,
                        "name": "_winnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "342:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 913,
                        "name": "_winProbability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "353:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 909,
                      "name": "processChallengeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "295:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "295:74:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d35bf1d9",
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deterministicChallenge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "name": "_myFyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "180:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "name": "_enemyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "202:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "name": "_winnerId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "220:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "name": "_winProbability",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 917,
                  "src": "239:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "179:84:4"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:4"
            },
            "scope": 948,
            "src": "148:228:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "440:46:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "450:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$106_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 926,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 925,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "459:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "450:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$106_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 103,
                      "src": "450:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 928,
                      "name": "_xp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "476:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "450:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "450:29:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c287e493",
            "id": 932,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateXp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 932,
                  "src": "400:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 921,
                  "name": "_xp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 932,
                  "src": "420:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:33:4"
            },
            "returnParameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:4"
            },
            "scope": 948,
            "src": "382:104:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 946,
              "nodeType": "Block",
              "src": "560:56:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 939,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "570:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$106_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 941,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "579:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "570:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$106_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105,
                      "src": "570:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 943,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "601:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "570:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "570:39:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "58453fef",
            "id": 947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 947,
                  "src": "515:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 947,
                  "src": "535:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:38:4"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:4"
            },
            "scope": 948,
            "src": "492:124:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 949,
        "src": "52:566:4"
      }
    ],
    "src": "0:619:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-18T14:13:42.237Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}