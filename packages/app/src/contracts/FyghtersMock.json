{
  "contractName": "FyghtersMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Dai",
          "name": "_dai",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "challengerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winnerId",
          "type": "uint256"
        }
      ],
      "name": "ChallengeOccurred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "FyghterCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newName",
          "type": "string"
        }
      ],
      "name": "FyghterRenamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newSkin",
          "type": "string"
        }
      ],
      "name": "SkinChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_winProbability",
          "type": "uint256"
        }
      ],
      "name": "calculateGainAndLoss",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gainIfWin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lossIfLose",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "calculateWinProbability",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winProbability",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newSkin",
          "type": "string"
        }
      ],
      "name": "changeSkin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fyghters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "skin",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "xp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBetValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "rename",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skins",
      "outputs": [
        {
          "internalType": "string",
          "name": "skin",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "xpNeeded",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_myFyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_enemyId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_winnerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_winProbability",
          "type": "uint256"
        }
      ],
      "name": "deterministicChallenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_xp",
          "type": "uint256"
        }
      ],
      "name": "updateXp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fyghterId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "updateBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Dai\",\"name\":\"_dai\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"challengerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winnerId\",\"type\":\"uint256\"}],\"name\":\"ChallengeOccurred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"FyghterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"FyghterRenamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newSkin\",\"type\":\"string\"}],\"name\":\"SkinChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_winProbability\",\"type\":\"uint256\"}],\"name\":\"calculateGainAndLoss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gainIfWin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lossIfLose\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"calculateWinProbability\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winProbability\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"challenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newSkin\",\"type\":\"string\"}],\"name\":\"changeSkin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_myFyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_enemyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winnerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winProbability\",\"type\":\"uint256\"}],\"name\":\"deterministicChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fyghters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skin\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"xp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"rename\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"skins\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"skin\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"xpNeeded\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fyghterId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_xp\",\"type\":\"uint256\"}],\"name\":\"updateXp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol\":\"FyghtersMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/cmarcelo/git/fyght/packages/contracts/contracts/Dai.sol\":{\"keccak256\":\"0x9edff17feebba19dcf62cc7bb82cd2dc9323ff41c2e808585f7932255829f06e\",\"urls\":[\"bzz-raw://ae7902eca5a3f234dfd479a3281db36189ff48e06042a726a6d6c9a54e5bddb2\",\"dweb:/ipfs/QmZK4rHZ39Deh47jwDKVv1nZ9jeN85XQmSr21Lw37LaBQe\"]},\"/home/cmarcelo/git/fyght/packages/contracts/contracts/Fyghters.sol\":{\"keccak256\":\"0xd27828eab3d9a85135bb6c8c58b318bd3d0f8b28b676d197507043891b1b3678\",\"urls\":[\"bzz-raw://ba1b731e0f3a467db347634a54a245cfa44eff1bd36881c94154a980d0379c7d\",\"dweb:/ipfs/Qmb2hmTXWMoWBqZnDGZzTTd8szbVjQ4kcWaEbdweN7SAQ1\"]},\"/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol\":{\"keccak256\":\"0xdc22111ef59866ef0290f6e78f5a315c67932c2a237ef9431108b4d6e591a475\",\"urls\":[\"bzz-raw://9aa5b7afd27a29df1e619c59cc45b4bb59264b2efaedfe0625e08d7985e1f73d\",\"dweb:/ipfs/QmY3TKahdZ73QQC4zWKJE7ZowTnZW3fYQc3AbZ1AWZubut\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xdcbcec72a08dc49e64965d2587b74d8b88cee6bdeecd6337016b7da774478c36\",\"urls\":[\"bzz-raw://b560b4b9736acd02b7cde1925ce1374a4bc87de0d04ba944b0a7f4056b75383f\",\"dweb:/ipfs/QmWewRjMTXUgAHTRMWZ3DHRdYdUkKWjFT7C6kNjLh4T2wL\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x90c70e6fbcedfd9aa2a5dbafdd5d77a510e5615da19b4009acd4a4f0c8bd5b6d\",\"urls\":[\"bzz-raw://49ba8557fdfb4ff8683f6d4057f39655447e432659ae58d568f12869599a4650\",\"dweb:/ipfs/QmaE2D7Z72nxeEwXZCaaqhdhQALFoMwU9AURJXJw1w8XEf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x708ae901e214e044a5c922748462157b9be162b3620aa56d7c0e7258f66aee1d\",\"urls\":[\"bzz-raw://c287ed9989e5f16114553a30f4ba3794be657f90598f101f7b92ce5859f46978\",\"dweb:/ipfs/QmeFeDCzfhhBTaY9NE9wREmrBRETvn4k3mo2FejqskVMtg\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xb40602104a74d4d8a682fad2cfa274d417821c55c71460a5248d6a8686be6bac\",\"urls\":[\"bzz-raw://7c3c7170a531f8c9ec76f4f69a9e875e92eec38dd52218434950d03c3f2657e7\",\"dweb:/ipfs/QmXpnZ2pCXFznTdfuoNH1fszjcRNn8Dyo2Q9stGEzbKVqL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x34726f200d88943561936daf5297552636b58b57ecd3eca6494d678d93d03252\",\"urls\":[\"bzz-raw://dee47bb5e1ef4b3b8ffd3edd9d1d774249c546d4ae890c46605dd9eda73ff7eb\",\"dweb:/ipfs/QmRKJyJDbjbaf8LLnw1jcpZ47VbU2c9gYT2xZSp19m55aM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80636352211e116100c3578063b6a46b3b1161007c578063b6a46b3b1461083c578063b88d4fde146108b5578063b94c9406146109ba578063c287e49314610a06578063d35bf1d914610a3e578063e985e9c514610a8a5761014d565b80636352211e1461063c5780636e8c9a14146106aa57806370a08231146106c85780639abc61f514610720578063a22cb46514610769578063a9163536146107b95761014d565b80632db2ede5116101155780632db2ede5146102ff5780632e414890146103b35780633ec2d836146103eb57806342842e0e1461046e57806349b640c5146104dc57806358453fef146106045761014d565b806301ffc9a714610152578063035cf142146101b7578063081812fc146101d5578063095ea7b31461024357806323b872dd14610291575b600080fd5b61019d6004803603602081101561016857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b06565b604051808215151515815260200191505060405180910390f35b6101bf610b6d565b6040518082815260200191505060405180910390f35b610201600480360360208110156101eb57600080fd5b8101908080359060200190929190505050610b80565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61028f6004803603604081101561025957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c1b565b005b6102fd600480360360608110156102a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d5f565b005b61032b6004803603602081101561031557600080fd5b8101908080359060200190929190505050610dd5565b60405180806020018360ff1660ff168152602001828103825284818151815260200191508051906020019080838360005b8381101561037757808201518184015260208101905061035c565b50505050905090810190601f1680156103a45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6103e9600480360360408110156103c957600080fd5b810190808035906020019092919080359060200190929190505050610eab565b005b61046c6004803603604081101561040157600080fd5b81019080803590602001909291908035906020019064010000000081111561042857600080fd5b82018360208201111561043a57600080fd5b8035906020019184600183028401116401000000008311171561045c57600080fd5b9091929391929390505050611074565b005b6104da6004803603606081101561048457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611199565b005b610508600480360360208110156104f257600080fd5b81019080803590602001909291905050506111b9565b604051808681526020018060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b8381101561055e578082015181840152602081019050610543565b50505050905090810190601f16801561058b5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b838110156105c45780820151818401526020810190506105a9565b50505050905090810190601f1680156105f15780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b61063a6004803603604081101561061a57600080fd5b81019080803590602001909291908035906020019092919050505061132c565b005b6106686004803603602081101561065257600080fd5b8101908080359060200190929190505050611353565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106b261141b565b6040518082815260200191505060405180910390f35b61070a600480360360208110156106de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061142e565b6040518082815260200191505060405180910390f35b61074c6004803603602081101561073657600080fd5b8101908080359060200190929190505050611503565b604051808381526020018281526020019250505060405180910390f35b6107b76004803603604081101561077f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611599565b005b61083a600480360360408110156107cf57600080fd5b8101908080359060200190929190803590602001906401000000008111156107f657600080fd5b82018360208201111561080857600080fd5b8035906020019184600183028401116401000000008311171561082a57600080fd5b9091929391929390505050611751565b005b6108b36004803603602081101561085257600080fd5b810190808035906020019064010000000081111561086f57600080fd5b82018360208201111561088157600080fd5b803590602001918460018302840111640100000000831117156108a357600080fd5b9091929391929390505050611af5565b005b6109b8600480360360808110156108cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561093257600080fd5b82018360208201111561094457600080fd5b8035906020019184600183028401116401000000008311171561096657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506120aa565b005b6109f0600480360360408110156109d057600080fd5b810190808035906020019092919080359060200190929190505050612122565b6040518082815260200191505060405180910390f35b610a3c60048036036040811015610a1c57600080fd5b81019080803590602001909291908035906020019092919050505061249d565b005b610a8860048036036080811015610a5457600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506124c4565b005b610aec60048036036040811015610aa057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124d6565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006005670de0b6b3a764000002905090565b6000610b8b8261256a565b610be0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613b0f602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c2682611353565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613b886021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610ccc6125dc565b73ffffffffffffffffffffffffffffffffffffffff161480610cfb5750610cfa81610cf56125dc565b6124d6565b5b610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180613a636038913960400191505060405180910390fd5b610d5a83836125e4565b505050565b610d70610d6a6125dc565b8261269d565b610dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613bd26031913960400191505060405180910390fd5b610dd0838383612791565b505050565b60078181548110610de257fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e8e5780601f10610e6357610100808354040283529160200191610e8e565b820191906000526020600020905b815481529060010190602001808311610e7157829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b81610eb581611353565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613a0e602e913960400191505060405180910390fd5b6000610f448484612122565b9050600080610f5283611503565b915091508060068781548110610f6457fe5b9060005260206000209060050201600401541015610fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613ba96029913960400191505060405180910390fd5b8160068681548110610fdb57fe5b9060005260206000209060050201600401541015611044576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806139626026913960400191505060405180910390fd5b60008361104f6129f9565b111561105b578561105d565b865b905061106b87878387612a59565b50505050505050565b8261107e81611353565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613a0e602e913960400191505060405180910390fd5b82826006868154811061111057fe5b9060005260206000209060050201600101919061112e9291906137af565b50837f553656c6feb05b3e720bd33ad52f9cc39bc80982fb434f80e81391abc4c9dda5848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b6111b4838383604051806020016040528060008152506120aa565b505050565b600681815481106111c657fe5b9060005260206000209060050201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112785780601f1061124d57610100808354040283529160200191611278565b820191906000526020600020905b81548152906001019060200180831161125b57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113165780601f106112eb57610100808354040283529160200191611316565b820191906000526020600020905b8154815290600101906020018083116112f957829003601f168201915b5050505050908060030154908060040154905085565b806006838154811061133a57fe5b9060005260206000209060050201600401819055505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611412576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613ac56029913960400191505060405180910390fd5b80915050919050565b60006005670de0b6b3a764000002905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613a9b602a913960400191505060405180910390fd5b6114fc600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612bb7565b9050919050565b600080611558670de0b6b3a764000061154a61153086670de0b6b3a7640000612bc590919063ffffffff16565b6005670de0b6b3a764000002612c0f90919063ffffffff16565b612c9590919063ffffffff16565b9150611592670de0b6b3a7640000611584856005670de0b6b3a764000002612c0f90919063ffffffff16565b612c9590919063ffffffff16565b9050915091565b6115a16125dc565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806004600061164f6125dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166116fc6125dc565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b8261175b81611353565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613a0e602e913960400191505060405180910390fd5b6000600685815481106117ed57fe5b90600052602060002090600502019050605060ff168160030154101561185e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613904602c913960400191505060405180910390fd5b6118ab84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612cdf565b61191d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420736b696e2e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6040518060400160405280600681526020017f6d617374657200000000000000000000000000000000000000000000000000008152506040516020018082805190602001908083835b602083106119895780518252602082019150602081019050602083039250611966565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001208484604051602001808383808284378083019250505092505050604051602081830303815290604052805190602001201415611a5c57606460ff1681600301541015611a5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806139886036913960400191505060405180910390fd5b5b838360068781548110611a6b57fe5b90600052602060002090600502016002019190611a899291906137af565b50847f546aa5db2f34cd0c10c3bf80054ede7658175a11189cbeee6241bd45952c3a99858560405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a25050505050565b6000611b003361142e565b14611b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613b3b6024913960400191505060405180910390fd5b6005670de0b6b3a764000002600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611c3557600080fd5b505afa158015611c49573d6000803e3d6000fd5b505050506040513d6020811015611c5f57600080fd5b81019080805190602001909291905050501015611cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180613a3c6027913960400191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306005670de0b6b3a7640000026040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611daf57600080fd5b505af1158015611dc3573d6000803e3d6000fd5b505050506040513d6020811015611dd957600080fd5b8101908080519060200190929190505050611e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4572726f72207768656e206465706f736974696e6720446169732e000000000081525060200191505060405180910390fd5b6000600680549050905060066040518060a0016040528083815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016007600081548110611ed157fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f765780601f10611f4b57610100808354040283529160200191611f76565b820191906000526020600020905b815481529060010190602001808311611f5957829003601f168201915b50505050508152602001600181526020016005670de0b6b3a7640000028152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001019080519060200190611fe592919061382f565b50604082015181600201908051906020019061200292919061382f565b50606082015181600301556080820151816004015550506120233382612e22565b3373ffffffffffffffffffffffffffffffffffffffff167f1243c32293ccfe8a2001f7de06e504e0ffb98f63144253faa43123a5cffe93dc82858560405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a2505050565b6120bb6120b56125dc565b8361269d565b612110576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613bd26031913960400191505060405180910390fd5b61211c84848484613046565b50505050565b600061212c6138af565b6006848154811061213957fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121f55780601f106121ca576101008083540402835291602001916121f5565b820191906000526020600020905b8154815290600101906020018083116121d857829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122975780601f1061226c57610100808354040283529160200191612297565b820191906000526020600020905b81548152906001019060200180831161227a57829003601f168201915b505050505081526020016003820154815260200160048201548152505090506122be6138af565b600684815481106122cb57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123875780601f1061235c57610100808354040283529160200191612387565b820191906000526020600020905b81548152906001019060200180831161236a57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124295780601f106123fe57610100808354040283529160200191612429565b820191906000526020600020905b81548152906001019060200180831161240c57829003601f168201915b50505050508152602001600382015481526020016004820154815250509050612493612466826060015184606001516130b890919063ffffffff16565b612485670de0b6b3a76400008560600151612c0f90919063ffffffff16565b612c9590919063ffffffff16565b9250505092915050565b80600683815481106124ab57fe5b9060005260206000209060050201600301819055505050565b6124d084848484612a59565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661265783611353565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006126a88261256a565b6126fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806139e2602c913960400191505060405180910390fd5b600061270883611353565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061277757508373ffffffffffffffffffffffffffffffffffffffff1661275f84610b80565b73ffffffffffffffffffffffffffffffffffffffff16145b80612788575061278781856124d6565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166127b182611353565b73ffffffffffffffffffffffffffffffffffffffff161461281d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156128a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806139be6024913960400191505060405180910390fd5b6128ae838383613140565b6128b96000826125e4565b612900600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613145565b612947600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613168565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612a546064670de0b6b3a76400006064424460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060001c81612a4457fe5b0602612c9590919063ffffffff16565b905090565b600080612a6583611503565b915091506000848714612a785781612a7a565b825b90506000878614612a8b5787612a8d565b865b905060068681548110612a9c57fe5b906000526020600020906005020160030160008154809291906001019190505550612aee8260068881548110612ace57fe5b9060005260206000209060050201600401546130b890919063ffffffff16565b60068781548110612afb57fe5b906000526020600020906005020160040181905550612b418260068381548110612b2157fe5b906000526020600020906005020160040154612bc590919063ffffffff16565b60068281548110612b4e57fe5b906000526020600020906005020160040181905550612b6c8661317e565b50877f9710e56297b5e8778d11e7e8579c9906ed103bf38376059777631205ff0c57788888604051808381526020018281526020019250505060405180910390a25050505050505050565b600081600001549050919050565b6000612c0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506132bb565b905092915050565b600080831415612c225760009050612c8f565b6000828402905082848281612c3357fe5b0414612c8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613aee6021913960400191505060405180910390fd5b809150505b92915050565b6000612cd783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061337b565b905092915050565b600080905060008090505b600780549050811015612e1c5760078181548110612d0457fe5b90600052602060002090600202016000016040516020018082805460018160011615610100020316600290048015612d735780601f10612d51576101008083540402835291820191612d73565b820191906000526020600020905b815481529060010190602001808311612d5f575b505091505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b60208310612dc55780518252602082019150602081019050602083039250612da2565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415612e0f5760019150612e1c565b8080600101915050612cea565b50919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ec5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b612ece8161256a565b15612f41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b612f4d60008383613140565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fe6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613168565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b613051848484612791565b61305d84848484613441565b6130b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806139306032913960400191505060405180910390fd5b50505050565b600080828401905083811015613136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b505050565b61315d60018260000154612bc590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6060600060016007805490500390505b600081106132b557600781815481106131a357fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff16600684815481106131d257fe5b906000526020600020906005020160030154106132a757600781815481106131f657fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561329b5780601f106132705761010080835404028352916020019161329b565b820191906000526020600020905b81548152906001019060200180831161327e57829003601f168201915b505050505091506132b5565b80806001900391505061318e565b50919050565b6000838311158290613368576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561332d578082015181840152602081019050613312565b50505050905090810190601f16801561335a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290613427576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156133ec5780820151818401526020810190506133d1565b50505050905090810190601f1680156134195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161343357fe5b049050809150509392505050565b60006134628473ffffffffffffffffffffffffffffffffffffffff16613764565b61346f576001905061375c565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b61349a6125dc565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561354a57808201518184015260208101905061352f565b50505050905090810190601f1680156135775780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061360f57805182526020820191506020810190506020830392506135ec565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613671576040519150601f19603f3d011682016040523d82523d6000602084013e613676565b606091505b5091509150816136e4576000815111156136935780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806139306032913960400191505060405180910390fd5b60008180602001905160208110156136fb57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156137a657506000801b8214155b92505050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106137f057803560ff191683800117855561381e565b8280016001018555821561381e579182015b8281111561381d578235825591602001919060010190613802565b5b50905061382b91906138de565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061387057805160ff191683800117855561389e565b8280016001018555821561389e579182015b8281111561389d578251825591602001919060010190613882565b5b5090506138ab91906138de565b5090565b6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b61390091905b808211156138fc5760008160009055506001016138e4565b5090565b9056fe5468652066796768746572206861736e277420656e6f75676820585020746f206368616e676520736b696e2e4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657254686520656e656d7920646f65736e2774206861766520656e6f7567682062616c616e63652e54686520667967687465722073686f756c642062652061206d617374657220746f2075736520746865206d617374657220736b696e2e4552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e54686973206f706572616374696f6e206f6e6c792063616e20626520646f6e6520627920746865206f776e65722e44616920616c6c6f77616e6365206973206c657373207468616e20746865206d696e696d756d2e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4561636820757365722063616e2068617665206a757374206f6e6520667967687465722e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572596f7572206679676874657220646f65736e2774206861766520656e6f7567682062616c616e63652e4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212201d8dd51d48aec639820f089632749baba94a7af32476b0e7832f829bbed6d2b764736f6c63430006020033",
  "sourceMap": "51:562:3:-:0;;;91:46;8:9:-1;5:2;;;30:1;27;20:12;5:2;91:46:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;91:46:3;;;;;;;;;;;;;;;;129:4;718:40:5;385:10;737:20;;718:18;;;:40;;:::i;:::-;2261::10;2135:10;2280:20;;2261:18;;;:40;;:::i;:::-;1261:4:1;1255:3;;:10;;;;;;;;;;;;;;;;;;1299:5;1310:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:1;1310:34;;;;;1299:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1299:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:5;1366:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:2;1366:40;;;;;1355:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1355:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:5;1428:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:2;1428:40;;;;;1417:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1417:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:5;1490:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:2;1490:38;;;;;1479:50;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1479:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1539:5;1550:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1580:2;1550:34;;;;;1539:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1539:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:5;1606:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:2;1606:35;;;;;1595:47;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1595:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:5;1663:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:2;1663:50;;;;;1652:62;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1652:62:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1724:5;1735:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:2;1735:35;;;;;1724:47;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1724:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:5;1792:50;;;;;;;;1804:11;;;;;;;;;;;;;;;;;1792:50;;;;295:3;1792:50;;;;;1781:62;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1781:62:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:634;91:46:3;51:562;;1451:198:5;1549:10;1534:25;;:11;:25;;;;;1526:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:4;1602:20;:33;1623:11;1602:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1451:198;:::o;51:562:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "51:562:3:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51:562:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:142:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:142:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1856:96:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4266:209:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4266:209:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3600:381;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3600:381:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5977:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5977:304:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1023:19:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1023:19:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1023:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3117:659;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3117:659:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2652:199;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2652:199:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2652:199:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2652:199:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2652:199:1;;;;;;;;;;;;:::i;:::-;;6930:149:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6930:149:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;992:25:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;992:25:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;992:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;992:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:124:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;487:124:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2947:232:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2947:232:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1958:88:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2512:216:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2512:216:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2857:254:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2857:254:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4774:290:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4774:290:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4509:630:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4509:630:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4509:630:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4509:630:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4509:630:1;;;;;;;;;;;;:::i;:::-;;2052:594;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2052:594:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2052:594:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2052:594:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2052:594:1;;;;;;;;;;;;:::i;:::-;;7802:286:10;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7802:286:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7802:286:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7802:286:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7802:286:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7802:286:10;;;;;;;;;;;;;;;:::i;:::-;;5145:353:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5145:353:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;377:104:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;377:104:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;143:228;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;143:228:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5386:154:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5386:154:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;915:142:5;994:4;1017:20;:33;1038:11;1017:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:40;;915:142;;;:::o;1856:96:1:-;1908:7;424:1;371:10;418:7;1927:18;;1856:96;:::o;4266:209:10:-;4334:7;4361:16;4369:7;4361;:16::i;:::-;4353:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4444:15;:24;4460:7;4444:24;;;;;;;;;;;;;;;;;;;;;4437:31;;4266:209;;;:::o;3600:381::-;3680:13;3696:16;3704:7;3696;:16::i;:::-;3680:32;;3736:5;3730:11;;:2;:11;;;;3722:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3814:5;3798:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3823:37;3840:5;3847:12;:10;:12::i;:::-;3823:16;:37::i;:::-;3798:62;3790:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3953:21;3962:2;3966:7;3953:8;:21::i;:::-;3600:381;;;:::o;5977:304::-;6136:41;6155:12;:10;:12::i;:::-;6169:7;6136:18;:41::i;:::-;6128:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6242:32;6256:4;6262:2;6266:7;6242:13;:32::i;:::-;5977:304;;;:::o;1023:19:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3117:659::-;3199:13;1122:19;1130:10;1122:7;:19::i;:::-;1108:33;;:10;:33;;;1100:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:22:::1;3249:49;3273:13;3288:9;3249:23;:49::i;:::-;3224:74;;3309:17;3328:18:::0;3350:36:::1;3371:14;3350:20;:36::i;:::-;3308:78;;;;3440:10;3405:8;3414:13;3405:23;;;;;;;;;;;;;;;;;;:31;;;:45;;3397:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:9;3514:8;3523:9;3514:19;;;;;;;;;;;;;;;;;;:27;;;:40;;3506:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3608:16;3641:14;3628:9;:7;:9::i;:::-;:27;;3627:57;;3675:9;3627:57;;;3659:13;3627:57;3608:76;;3695:74;3718:13;3733:9;3744:8;3754:14;3695:22;:74::i;:::-;1202:1;;;;3117:659:::0;;;:::o;2652:199::-;2735:10;1122:19;1130:10;1122:7;:19::i;:::-;1108:33;;:10;:33;;;1100:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2785:8:::1;;2757;2766:10;2757:20;;;;;;;;;;;;;;;;;;:25;;:36;;;;;;;:::i;:::-;;2823:10;2808:36;2835:8;;2808:36;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2808:36:1;;;;;;;;;;;;;;2652:199:::0;;;;:::o;6930:149:10:-;7033:39;7050:4;7056:2;7060:7;7033:39;;;;;;;;;;;;:16;:39::i;:::-;6930:149;;;:::o;992:25:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;487:124:3:-;596:8;565;574:10;565:20;;;;;;;;;;;;;;;;;;:28;;:39;;;;487:124;;:::o;2947:232:10:-;3011:7;3030:13;3046:11;:20;3058:7;3046:20;;;;;;;;;;;;;;;;;;;;;3030:36;;3101:1;3084:19;;:5;:19;;;;3076:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:5;3160:12;;;2947:232;;;:::o;1958:88:1:-;2004:7;466:1;371:10;460:7;2023:16;;1958:88;:::o;2512:216:10:-;2576:7;2620:1;2603:19;;:5;:19;;;;2595:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2687:34;:17;:24;2705:5;2687:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2680:41;;2512:216;;;:::o;2857:254:1:-;2933:17;2952:18;2994:48;371:10;2994:39;3008:24;3016:15;371:10;3008:7;;:24;;;;:::i;:::-;466:1;371:10;460:7;2994:13;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;2982:60;;3065:39;371:10;3065:30;3079:15;466:1;371:10;460:7;3065:13;;:30;;;;:::i;:::-;:34;;:39;;;;:::i;:::-;3052:52;;2857:254;;;:::o;4774:290:10:-;4888:12;:10;:12::i;:::-;4876:24;;:8;:24;;;;4868:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:8;4941:18;:32;4960:12;:10;:12::i;:::-;4941:32;;;;;;;;;;;;;;;:42;4974:8;4941:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;5038:8;5009:48;;5024:12;:10;:12::i;:::-;5009:48;;;5048:8;5009:48;;;;;;;;;;;;;;;;;;;;;;4774:290;;:::o;4509:630:1:-;4596:10;1122:19;1130:10;1122:7;:19::i;:::-;1108:33;;:10;:33;;;1100:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4618:23:::1;4644:8;4653:10;4644:20;;;;;;;;;;;;;;;;;;4618:46;;256:2;4682:30;;:7;:10;;;:30;;4674:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:22;4793:8;;4780:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4780:22:1;;;;;;:12;:22::i;:::-;4772:48;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4903:11;;;;;;;;;;;;;;;;::::0;4886:29:::1;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4886:29:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4886:29:1;;;4876:40;;;;;;4862:8;;4845:26;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4845::1;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4845:26:1;;;4835:37;;;;;;:81;4831:206;;;295:3;4940:27;;:7;:10;;;:27;;4932:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4831:206;5075:8;;5047;5056:10;5047:20;;;;;;;;;;;;;;;;;;:25;;:36;;;;;;;:::i;:::-;;5111:10;5099:33;5123:8;;5099:33;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5099:33:1;;;;;;;;;;;;;;1202:1;4509:630:::0;;;;:::o;2052:594::-;2143:1;2118:21;2128:10;2118:9;:21::i;:::-;:26;2110:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:1;371:10;418:7;2203:3;;;;;;;;;;;:13;;;2217:10;2237:4;2203:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2203:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2203:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2203:40:1;;;;;;;;;;;;;;;;:55;;2195:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2320:3;;;;;;;;;;;:16;;;2337:10;2357:4;424:1;371:10;418:7;2320:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2320:56:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2320:56:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2320:56:1;;;;;;;;;;;;;;;;2312:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:11;2433:8;:15;;;;2419:29;;2458:8;2472:81;;;;;;;;2485:3;2472:81;;;;2496:5;;2472:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2472:81:1;;;;;;;;;;2509:5;2515:1;2509:8;;;;;;;;;;;;;;;;;;:13;;2472:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:1;2472:81;;;;424:1;371:10;418:7;2472:81;;;2458:96;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2458:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2564:22;2570:10;2582:3;2564:5;:22::i;:::-;2616:10;2601:38;;;2628:3;2633:5;;2601:38;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2601:38:1;;;;;;;;;;;;;;;2052:594;;;:::o;7802:286:10:-;7933:41;7952:12;:10;:12::i;:::-;7966:7;7933:18;:41::i;:::-;7925:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8038:43;8056:4;8062:2;8066:7;8075:5;8038:17;:43::i;:::-;7802:286;;;;:::o;5145:353:1:-;5265:22;5303:25;;:::i;:::-;5331:8;5340:13;5331:23;;;;;;;;;;;;;;;;;;5303:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5364:21;;:::i;:::-;5388:8;5397:9;5388:19;;;;;;;;;;;;;;;;;;5364:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:56;5462:28;5480:6;:9;;;5462:10;:13;;;:17;;:28;;;;:::i;:::-;5435:22;371:10;5435;:13;;;:17;;:22;;;;:::i;:::-;:26;;:56;;;;:::i;:::-;5418:73;;5145:353;;;;;;:::o;377:104:3:-;471:3;445:8;454:10;445:20;;;;;;;;;;;;;;;;;;:23;;:29;;;;377:104;;:::o;143:228::-;290:74;313:12;327:8;337:9;348:15;290:22;:74::i;:::-;143:228;;;;:::o;5386:154:10:-;5475:4;5498:18;:25;5517:5;5498:25;;;;;;;;;;;;;;;:35;5524:8;5498:35;;;;;;;;;;;;;;;;;;;;;;;;;5491:42;;5386:154;;;;:::o;9265:152::-;9322:4;9338:13;9354:11;:20;9366:7;9354:20;;;;;;;;;;;;;;;;;;;;;9338:36;;9408:1;9391:19;;:5;:19;;;;9384:26;;;9265:152;;;:::o;735:104:4:-;788:15;822:10;815:17;;735:104;:::o;15299:155:10:-;15391:2;15364:15;:24;15380:7;15364:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15439:7;15435:2;15408:39;;15417:16;15425:7;15417;:16::i;:::-;15408:39;;;;;;;;;;;;15299:155;;:::o;9778:329::-;9863:4;9887:16;9895:7;9887;:16::i;:::-;9879:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9962:13;9978:16;9986:7;9978;:16::i;:::-;9962:32;;10023:5;10012:16;;:7;:16;;;:51;;;;10056:7;10032:31;;:20;10044:7;10032:11;:20::i;:::-;:31;;;10012:51;:87;;;;10067:32;10084:5;10091:7;10067:16;:32::i;:::-;10012:87;10004:96;;;9778:329;;;;:::o;13152:538::-;13273:4;13253:24;;:16;13261:7;13253;:16::i;:::-;:24;;;13245:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13355:1;13341:16;;:2;:16;;;;13333:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13409:39;13430:4;13436:2;13440:7;13409:20;:39::i;:::-;13486:29;13503:1;13507:7;13486:8;:29::i;:::-;13526:35;:17;:23;13544:4;13526:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13571:33;:17;:21;13589:2;13571:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13638:2;13615:11;:20;13627:7;13615:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13675:7;13671:2;13656:27;;13665:4;13656:27;;;;;;;;;;;;13152:538;;;:::o;5961:171:1:-;6003:7;6029:96;6121:3;371:10;6105:3;6066:15;6083:16;6049:51;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6049:51:1;;;6039:62;;;;;;6031:71;;:77;;;;;;6030:85;6029:91;;:96;;;;:::i;:::-;6022:103;;5961:171;:::o;3782:721::-;3958:17;3977:18;3999:37;4020:15;3999:20;:37::i;:::-;3957:79;;;;4047:13;4081:9;4064:13;:26;4063:53;;4106:10;4063:53;;;4094:9;4063:53;4047:69;;4126:15;4157:13;4144:9;:26;:54;;4185:13;4144:54;;;4173:9;4144:54;4126:72;;4209:8;4218:9;4209:19;;;;;;;;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;4273:38;4305:5;4273:8;4282:9;4273:19;;;;;;;;;;;;;;;;;;:27;;;:31;;:38;;;;:::i;:::-;4243:8;4252:9;4243:19;;;;;;;;;;;;;;;;;;:27;;:68;;;;4349:36;4379:5;4349:8;4358:7;4349:17;;;;;;;;;;;;;;;;;;:25;;;:29;;:36;;;;:::i;:::-;4321:8;4330:7;4321:17;;;;;;;;;;;;;;;;;;:25;;:64;;;;4396:30;4416:9;4396:19;:30::i;:::-;;4460:13;4442:54;4475:9;4486;4442:54;;;;;;;;;;;;;;;;;;;;;;;;3782:721;;;;;;;;:::o;1065:112:14:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;1274:134:7:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2119:459::-;2177:7;2423:1;2418;:6;2414:45;;;2447:1;2440:8;;;;2414:45;2469:9;2485:1;2481;:5;2469:17;;2513:1;2508;2504;:5;;;;;;:10;2496:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2570:1;2563:8;;;2119:459;;;;;:::o;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3110:46;;3033:130;;;;:::o;6138:353:1:-;6202:16;6244:5;6230:19;;6264:9;6276:1;6264:13;;6259:226;6283:5;:12;;;;6279:1;:16;6259:226;;;6384:5;6390:1;6384:8;;;;;;;;;;;;;;;;;;:13;;6367:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6367:31:1;;;6357:42;;;;;;6347:4;6330:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6330:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6330:22:1;;;6320:33;;;;;;:79;6316:159;;;6433:4;6419:18;;6455:5;;6316:159;6297:3;;;;;;;6259:226;;;;6138:353;;;:::o;11837:391:10:-;11930:1;11916:16;;:2;:16;;;;11908:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11988:16;11996:7;11988;:16::i;:::-;11987:17;11979:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12048:45;12077:1;12081:2;12085:7;12048:20;:45::i;:::-;12127:2;12104:11;:20;12116:7;12104:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12139:33;:17;:21;12157:2;12139:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12213:7;12209:2;12188:33;;12205:1;12188:33;;;;;;;;;;;;11837:391;;:::o;8793:277::-;8910:32;8924:4;8930:2;8934:7;8910:13;:32::i;:::-;8960:48;8983:4;8989:2;8993:7;9002:5;8960:22;:48::i;:::-;8952:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8793:277;;;;:::o;834:176:7:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;15986:93:10:-;;;;:::o;1367:108:14:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;5504:312:1:-;5576:21;5614:9;5641:1;5626:5;:12;;;;:16;5614:28;;5609:201;5649:1;5644;:6;5609:201;;5702:5;5708:1;5702:8;;;;;;;;;;;;;;;;;;:17;;;;;;;;;;;;5675:44;;:8;5684:10;5675:20;;;;;;;;;;;;;;;;;;:23;;;:44;5671:129;;5749:5;5755:1;5749:8;;;;;;;;;;;;;;;;;;:13;;5739:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5780:5;;5671:129;5652:3;;;;;;;;5609:201;;;;5504:312;;;:::o;1692:187:7:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;3638:338::-;3724:7;3821:1;3817;:5;3824:12;3809:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3809:28:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;3847:17;;3968:1;3961:8;;;3638:338;;;;;:::o;14243:1050:10:-;14363:4;14388:15;:2;:13;;;:15::i;:::-;14383:58;;14426:4;14419:11;;;;14383:58;14510:12;14524:23;14551:2;:7;;14595:45;;;14654:12;:10;:12::i;:::-;14680:4;14698:7;14719:5;14559:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14559:175:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14559:175:10;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;14559:175:10;14551:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14551:184:10;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;14509:226:10;;;;14750:7;14745:542;;14797:1;14777:10;:17;:21;14773:376;;;14942:10;14936:17;15002:15;14989:10;14985:2;14981:19;14974:44;14891:145;15074:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14745:542;15179:13;15206:10;15195:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15195:32:10;;;;;;;;;;;;;;;;15179:48;;753:10;15259:16;;15249:26;;;:6;:26;;;;15241:35;;;;;14243:1050;;;;;;;:::o;685:610:13:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;51:562:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.6.2;\n\nimport \"../Fyghters.sol\";\n\ncontract FyghtersMock is Fyghters {\n    constructor(Dai _dai) public Fyghters(_dai) {}\n\n    function deterministicChallenge(uint256 _myFyghterId, uint256 _enemyId, uint256 _winnerId, uint256 _winProbability)\n        external\n    {\n        processChallengeResult(_myFyghterId, _enemyId, _winnerId, _winProbability);\n    }\n\n    function updateXp(uint256 _fyghterId, uint256 _xp) public {\n        fyghters[_fyghterId].xp = _xp;\n    }\n\n    function updateBalance(uint256 _fyghterId, uint256 _balance) public {\n        fyghters[_fyghterId].balance = _balance;\n    }\n}\n",
  "sourcePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol",
  "ast": {
    "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol",
    "exportedSymbols": {
      "FyghtersMock": [
        853
      ]
    },
    "id": 854,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 791,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/Fyghters.sol",
        "file": "../Fyghters.sol",
        "id": 792,
        "nodeType": "ImportDirective",
        "scope": 854,
        "sourceUnit": 733,
        "src": "24:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 793,
              "name": "Fyghters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 732,
              "src": "76:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fyghters_$732",
                "typeString": "contract Fyghters"
              }
            },
            "id": 794,
            "nodeType": "InheritanceSpecifier",
            "src": "76:8:3"
          }
        ],
        "contractDependencies": [
          732,
          880,
          933,
          943,
          2329,
          2432
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 853,
        "linearizedBaseContracts": [
          853,
          732,
          2329,
          2432,
          933,
          943,
          880
        ],
        "name": "FyghtersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "135:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 799,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "129:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dai_$18",
                      "typeString": "contract Dai"
                    }
                  }
                ],
                "id": 800,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 798,
                  "name": "Fyghters",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 732,
                  "src": "120:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Fyghters_$732_$",
                    "typeString": "type(contract Fyghters)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "120:14:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 803,
                  "src": "103:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Dai_$18",
                    "typeString": "contract Dai"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 795,
                    "name": "Dai",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18,
                    "src": "103:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dai_$18",
                      "typeString": "contract Dai"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "102:10:3"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:0:3"
            },
            "scope": 853,
            "src": "91:46:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "280:91:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "_myFyghterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "313:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 816,
                        "name": "_enemyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "327:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "_winnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "337:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "_winProbability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "348:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 814,
                      "name": "processChallengeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "290:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "290:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "290:74:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d35bf1d9",
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deterministicChallenge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "name": "_myFyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "175:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 807,
                  "name": "_enemyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "197:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "name": "_winnerId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "215:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "name": "_winProbability",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "234:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "174:84:3"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:3"
            },
            "scope": 853,
            "src": "143:228:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "435:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 829,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "445:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$95_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 831,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 830,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "454:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "445:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$95_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "445:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 833,
                      "name": "_xp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "471:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "445:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "445:29:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c287e493",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateXp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 837,
                  "src": "395:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "_xp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 837,
                  "src": "415:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "394:33:3"
            },
            "returnParameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:3"
            },
            "scope": 853,
            "src": "377:104:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "555:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 844,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "565:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$95_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 846,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 845,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "574:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "565:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$95_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "565:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 848,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "596:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "565:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "565:39:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "58453fef",
            "id": 852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 852,
                  "src": "510:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 852,
                  "src": "530:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "509:38:3"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:0:3"
            },
            "scope": 853,
            "src": "487:124:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 854,
        "src": "51:562:3"
      }
    ],
    "src": "0:614:3"
  },
  "legacyAST": {
    "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/mocks/FyghtersMock.sol",
    "exportedSymbols": {
      "FyghtersMock": [
        853
      ]
    },
    "id": 854,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 791,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/home/cmarcelo/git/fyght/packages/contracts/contracts/Fyghters.sol",
        "file": "../Fyghters.sol",
        "id": 792,
        "nodeType": "ImportDirective",
        "scope": 854,
        "sourceUnit": 733,
        "src": "24:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 793,
              "name": "Fyghters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 732,
              "src": "76:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fyghters_$732",
                "typeString": "contract Fyghters"
              }
            },
            "id": 794,
            "nodeType": "InheritanceSpecifier",
            "src": "76:8:3"
          }
        ],
        "contractDependencies": [
          732,
          880,
          933,
          943,
          2329,
          2432
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 853,
        "linearizedBaseContracts": [
          853,
          732,
          2329,
          2432,
          933,
          943,
          880
        ],
        "name": "FyghtersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "135:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 799,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "129:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dai_$18",
                      "typeString": "contract Dai"
                    }
                  }
                ],
                "id": 800,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 798,
                  "name": "Fyghters",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 732,
                  "src": "120:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Fyghters_$732_$",
                    "typeString": "type(contract Fyghters)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "120:14:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 803,
                  "src": "103:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Dai_$18",
                    "typeString": "contract Dai"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 795,
                    "name": "Dai",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18,
                    "src": "103:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dai_$18",
                      "typeString": "contract Dai"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "102:10:3"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:0:3"
            },
            "scope": 853,
            "src": "91:46:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "280:91:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "_myFyghterId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "313:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 816,
                        "name": "_enemyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "327:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "_winnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "337:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "_winProbability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "348:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 814,
                      "name": "processChallengeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "290:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "290:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "290:74:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d35bf1d9",
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deterministicChallenge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "name": "_myFyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "175:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 807,
                  "name": "_enemyId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "197:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "name": "_winnerId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "215:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "name": "_winProbability",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 822,
                  "src": "234:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "174:84:3"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:3"
            },
            "scope": 853,
            "src": "143:228:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "435:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 829,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "445:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$95_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 831,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 830,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "454:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "445:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$95_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "445:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 833,
                      "name": "_xp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "471:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "445:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "445:29:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c287e493",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateXp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 837,
                  "src": "395:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "_xp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 837,
                  "src": "415:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "394:33:3"
            },
            "returnParameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:3"
            },
            "scope": 853,
            "src": "377:104:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "555:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 844,
                          "name": "fyghters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "565:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Fyghter_$95_storage_$dyn_storage",
                            "typeString": "struct Fyghters.Fyghter storage ref[] storage ref"
                          }
                        },
                        "id": 846,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 845,
                          "name": "_fyghterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "574:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "565:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fyghter_$95_storage",
                          "typeString": "struct Fyghters.Fyghter storage ref"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "565:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 848,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "596:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "565:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "565:39:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "58453fef",
            "id": 852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "name": "_fyghterId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 852,
                  "src": "510:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 852,
                  "src": "530:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "509:38:3"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:0:3"
            },
            "scope": 853,
            "src": "487:124:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 854,
        "src": "51:562:3"
      }
    ],
    "src": "0:614:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-22T14:08:19.871Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}